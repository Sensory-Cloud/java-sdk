// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/common.proto

package ai.sensorycloud.api.common;

/**
 * <pre>
 * Response from a GetHealth request
 * </pre>
 *
 * Protobuf type {@code sensory.api.common.ServerHealthResponse}
 */
public final class ServerHealthResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:sensory.api.common.ServerHealthResponse)
    ServerHealthResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ServerHealthResponse.newBuilder() to construct.
  private ServerHealthResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ServerHealthResponse() {
    serverVersion_ = "";
    id_ = "";
    services_ = java.util.Collections.emptyList();
    serverType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ServerHealthResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ServerHealthResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            isHealthy_ = input.readBool();
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            serverVersion_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            id_ = s;
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              services_ = new java.util.ArrayList<ai.sensorycloud.api.common.ServiceHealth>();
              mutable_bitField0_ |= 0x00000001;
            }
            services_.add(
                input.readMessage(ai.sensorycloud.api.common.ServiceHealth.parser(), extensionRegistry));
            break;
          }
          case 40: {
            int rawValue = input.readEnum();

            serverType_ = rawValue;
            break;
          }
          case 48: {

            isLeader_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        services_ = java.util.Collections.unmodifiableList(services_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.sensorycloud.api.common.SensoryApiCommonProto.internal_static_sensory_api_common_ServerHealthResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.sensorycloud.api.common.SensoryApiCommonProto.internal_static_sensory_api_common_ServerHealthResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.sensorycloud.api.common.ServerHealthResponse.class, ai.sensorycloud.api.common.ServerHealthResponse.Builder.class);
  }

  public static final int ISHEALTHY_FIELD_NUMBER = 1;
  private boolean isHealthy_;
  /**
   * <pre>
   * Is healthy indication. True if all services are healthy.
   * </pre>
   *
   * <code>bool isHealthy = 1;</code>
   * @return The isHealthy.
   */
  @java.lang.Override
  public boolean getIsHealthy() {
    return isHealthy_;
  }

  public static final int SERVERVERSION_FIELD_NUMBER = 2;
  private volatile java.lang.Object serverVersion_;
  /**
   * <pre>
   * Currently running server version
   * </pre>
   *
   * <code>string serverVersion = 2;</code>
   * @return The serverVersion.
   */
  @java.lang.Override
  public java.lang.String getServerVersion() {
    java.lang.Object ref = serverVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      serverVersion_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Currently running server version
   * </pre>
   *
   * <code>string serverVersion = 2;</code>
   * @return The bytes for serverVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getServerVersionBytes() {
    java.lang.Object ref = serverVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      serverVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ID_FIELD_NUMBER = 3;
  private volatile java.lang.Object id_;
  /**
   * <pre>
   * Unique Identifier for the particular server
   * </pre>
   *
   * <code>string id = 3;</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Unique Identifier for the particular server
   * </pre>
   *
   * <code>string id = 3;</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVICES_FIELD_NUMBER = 4;
  private java.util.List<ai.sensorycloud.api.common.ServiceHealth> services_;
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  @java.lang.Override
  public java.util.List<ai.sensorycloud.api.common.ServiceHealth> getServicesList() {
    return services_;
  }
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.sensorycloud.api.common.ServiceHealthOrBuilder> 
      getServicesOrBuilderList() {
    return services_;
  }
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  @java.lang.Override
  public int getServicesCount() {
    return services_.size();
  }
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  @java.lang.Override
  public ai.sensorycloud.api.common.ServiceHealth getServices(int index) {
    return services_.get(index);
  }
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  @java.lang.Override
  public ai.sensorycloud.api.common.ServiceHealthOrBuilder getServicesOrBuilder(
      int index) {
    return services_.get(index);
  }

  public static final int SERVERTYPE_FIELD_NUMBER = 5;
  private int serverType_;
  /**
   * <pre>
   * The type of server that is sending the health response
   * </pre>
   *
   * <code>.sensory.api.common.ServerType serverType = 5;</code>
   * @return The enum numeric value on the wire for serverType.
   */
  @java.lang.Override public int getServerTypeValue() {
    return serverType_;
  }
  /**
   * <pre>
   * The type of server that is sending the health response
   * </pre>
   *
   * <code>.sensory.api.common.ServerType serverType = 5;</code>
   * @return The serverType.
   */
  @java.lang.Override public ai.sensorycloud.api.common.ServerType getServerType() {
    @SuppressWarnings("deprecation")
    ai.sensorycloud.api.common.ServerType result = ai.sensorycloud.api.common.ServerType.valueOf(serverType_);
    return result == null ? ai.sensorycloud.api.common.ServerType.UNRECOGNIZED : result;
  }

  public static final int ISLEADER_FIELD_NUMBER = 6;
  private boolean isLeader_;
  /**
   * <code>bool isLeader = 6;</code>
   * @return The isLeader.
   */
  @java.lang.Override
  public boolean getIsLeader() {
    return isLeader_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (isHealthy_ != false) {
      output.writeBool(1, isHealthy_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serverVersion_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, serverVersion_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, id_);
    }
    for (int i = 0; i < services_.size(); i++) {
      output.writeMessage(4, services_.get(i));
    }
    if (serverType_ != ai.sensorycloud.api.common.ServerType.TITAN.getNumber()) {
      output.writeEnum(5, serverType_);
    }
    if (isLeader_ != false) {
      output.writeBool(6, isLeader_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (isHealthy_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, isHealthy_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serverVersion_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, serverVersion_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, id_);
    }
    for (int i = 0; i < services_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, services_.get(i));
    }
    if (serverType_ != ai.sensorycloud.api.common.ServerType.TITAN.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, serverType_);
    }
    if (isLeader_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, isLeader_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ai.sensorycloud.api.common.ServerHealthResponse)) {
      return super.equals(obj);
    }
    ai.sensorycloud.api.common.ServerHealthResponse other = (ai.sensorycloud.api.common.ServerHealthResponse) obj;

    if (getIsHealthy()
        != other.getIsHealthy()) return false;
    if (!getServerVersion()
        .equals(other.getServerVersion())) return false;
    if (!getId()
        .equals(other.getId())) return false;
    if (!getServicesList()
        .equals(other.getServicesList())) return false;
    if (serverType_ != other.serverType_) return false;
    if (getIsLeader()
        != other.getIsLeader()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ISHEALTHY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsHealthy());
    hash = (37 * hash) + SERVERVERSION_FIELD_NUMBER;
    hash = (53 * hash) + getServerVersion().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    if (getServicesCount() > 0) {
      hash = (37 * hash) + SERVICES_FIELD_NUMBER;
      hash = (53 * hash) + getServicesList().hashCode();
    }
    hash = (37 * hash) + SERVERTYPE_FIELD_NUMBER;
    hash = (53 * hash) + serverType_;
    hash = (37 * hash) + ISLEADER_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsLeader());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ai.sensorycloud.api.common.ServerHealthResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Response from a GetHealth request
   * </pre>
   *
   * Protobuf type {@code sensory.api.common.ServerHealthResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:sensory.api.common.ServerHealthResponse)
      ai.sensorycloud.api.common.ServerHealthResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.sensorycloud.api.common.SensoryApiCommonProto.internal_static_sensory_api_common_ServerHealthResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.sensorycloud.api.common.SensoryApiCommonProto.internal_static_sensory_api_common_ServerHealthResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.sensorycloud.api.common.ServerHealthResponse.class, ai.sensorycloud.api.common.ServerHealthResponse.Builder.class);
    }

    // Construct using ai.sensorycloud.api.common.ServerHealthResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getServicesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      isHealthy_ = false;

      serverVersion_ = "";

      id_ = "";

      if (servicesBuilder_ == null) {
        services_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        servicesBuilder_.clear();
      }
      serverType_ = 0;

      isLeader_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.sensorycloud.api.common.SensoryApiCommonProto.internal_static_sensory_api_common_ServerHealthResponse_descriptor;
    }

    @java.lang.Override
    public ai.sensorycloud.api.common.ServerHealthResponse getDefaultInstanceForType() {
      return ai.sensorycloud.api.common.ServerHealthResponse.getDefaultInstance();
    }

    @java.lang.Override
    public ai.sensorycloud.api.common.ServerHealthResponse build() {
      ai.sensorycloud.api.common.ServerHealthResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ai.sensorycloud.api.common.ServerHealthResponse buildPartial() {
      ai.sensorycloud.api.common.ServerHealthResponse result = new ai.sensorycloud.api.common.ServerHealthResponse(this);
      int from_bitField0_ = bitField0_;
      result.isHealthy_ = isHealthy_;
      result.serverVersion_ = serverVersion_;
      result.id_ = id_;
      if (servicesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          services_ = java.util.Collections.unmodifiableList(services_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.services_ = services_;
      } else {
        result.services_ = servicesBuilder_.build();
      }
      result.serverType_ = serverType_;
      result.isLeader_ = isLeader_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.sensorycloud.api.common.ServerHealthResponse) {
        return mergeFrom((ai.sensorycloud.api.common.ServerHealthResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.sensorycloud.api.common.ServerHealthResponse other) {
      if (other == ai.sensorycloud.api.common.ServerHealthResponse.getDefaultInstance()) return this;
      if (other.getIsHealthy() != false) {
        setIsHealthy(other.getIsHealthy());
      }
      if (!other.getServerVersion().isEmpty()) {
        serverVersion_ = other.serverVersion_;
        onChanged();
      }
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        onChanged();
      }
      if (servicesBuilder_ == null) {
        if (!other.services_.isEmpty()) {
          if (services_.isEmpty()) {
            services_ = other.services_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureServicesIsMutable();
            services_.addAll(other.services_);
          }
          onChanged();
        }
      } else {
        if (!other.services_.isEmpty()) {
          if (servicesBuilder_.isEmpty()) {
            servicesBuilder_.dispose();
            servicesBuilder_ = null;
            services_ = other.services_;
            bitField0_ = (bitField0_ & ~0x00000001);
            servicesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getServicesFieldBuilder() : null;
          } else {
            servicesBuilder_.addAllMessages(other.services_);
          }
        }
      }
      if (other.serverType_ != 0) {
        setServerTypeValue(other.getServerTypeValue());
      }
      if (other.getIsLeader() != false) {
        setIsLeader(other.getIsLeader());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      ai.sensorycloud.api.common.ServerHealthResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (ai.sensorycloud.api.common.ServerHealthResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private boolean isHealthy_ ;
    /**
     * <pre>
     * Is healthy indication. True if all services are healthy.
     * </pre>
     *
     * <code>bool isHealthy = 1;</code>
     * @return The isHealthy.
     */
    @java.lang.Override
    public boolean getIsHealthy() {
      return isHealthy_;
    }
    /**
     * <pre>
     * Is healthy indication. True if all services are healthy.
     * </pre>
     *
     * <code>bool isHealthy = 1;</code>
     * @param value The isHealthy to set.
     * @return This builder for chaining.
     */
    public Builder setIsHealthy(boolean value) {
      
      isHealthy_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Is healthy indication. True if all services are healthy.
     * </pre>
     *
     * <code>bool isHealthy = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsHealthy() {
      
      isHealthy_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object serverVersion_ = "";
    /**
     * <pre>
     * Currently running server version
     * </pre>
     *
     * <code>string serverVersion = 2;</code>
     * @return The serverVersion.
     */
    public java.lang.String getServerVersion() {
      java.lang.Object ref = serverVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serverVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Currently running server version
     * </pre>
     *
     * <code>string serverVersion = 2;</code>
     * @return The bytes for serverVersion.
     */
    public com.google.protobuf.ByteString
        getServerVersionBytes() {
      java.lang.Object ref = serverVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serverVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Currently running server version
     * </pre>
     *
     * <code>string serverVersion = 2;</code>
     * @param value The serverVersion to set.
     * @return This builder for chaining.
     */
    public Builder setServerVersion(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      serverVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Currently running server version
     * </pre>
     *
     * <code>string serverVersion = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearServerVersion() {
      
      serverVersion_ = getDefaultInstance().getServerVersion();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Currently running server version
     * </pre>
     *
     * <code>string serverVersion = 2;</code>
     * @param value The bytes for serverVersion to set.
     * @return This builder for chaining.
     */
    public Builder setServerVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      serverVersion_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * Unique Identifier for the particular server
     * </pre>
     *
     * <code>string id = 3;</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Unique Identifier for the particular server
     * </pre>
     *
     * <code>string id = 3;</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Unique Identifier for the particular server
     * </pre>
     *
     * <code>string id = 3;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Unique Identifier for the particular server
     * </pre>
     *
     * <code>string id = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      
      id_ = getDefaultInstance().getId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Unique Identifier for the particular server
     * </pre>
     *
     * <code>string id = 3;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value;
      onChanged();
      return this;
    }

    private java.util.List<ai.sensorycloud.api.common.ServiceHealth> services_ =
      java.util.Collections.emptyList();
    private void ensureServicesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        services_ = new java.util.ArrayList<ai.sensorycloud.api.common.ServiceHealth>(services_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        ai.sensorycloud.api.common.ServiceHealth, ai.sensorycloud.api.common.ServiceHealth.Builder, ai.sensorycloud.api.common.ServiceHealthOrBuilder> servicesBuilder_;

    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public java.util.List<ai.sensorycloud.api.common.ServiceHealth> getServicesList() {
      if (servicesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(services_);
      } else {
        return servicesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public int getServicesCount() {
      if (servicesBuilder_ == null) {
        return services_.size();
      } else {
        return servicesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public ai.sensorycloud.api.common.ServiceHealth getServices(int index) {
      if (servicesBuilder_ == null) {
        return services_.get(index);
      } else {
        return servicesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public Builder setServices(
        int index, ai.sensorycloud.api.common.ServiceHealth value) {
      if (servicesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureServicesIsMutable();
        services_.set(index, value);
        onChanged();
      } else {
        servicesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public Builder setServices(
        int index, ai.sensorycloud.api.common.ServiceHealth.Builder builderForValue) {
      if (servicesBuilder_ == null) {
        ensureServicesIsMutable();
        services_.set(index, builderForValue.build());
        onChanged();
      } else {
        servicesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public Builder addServices(ai.sensorycloud.api.common.ServiceHealth value) {
      if (servicesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureServicesIsMutable();
        services_.add(value);
        onChanged();
      } else {
        servicesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public Builder addServices(
        int index, ai.sensorycloud.api.common.ServiceHealth value) {
      if (servicesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureServicesIsMutable();
        services_.add(index, value);
        onChanged();
      } else {
        servicesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public Builder addServices(
        ai.sensorycloud.api.common.ServiceHealth.Builder builderForValue) {
      if (servicesBuilder_ == null) {
        ensureServicesIsMutable();
        services_.add(builderForValue.build());
        onChanged();
      } else {
        servicesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public Builder addServices(
        int index, ai.sensorycloud.api.common.ServiceHealth.Builder builderForValue) {
      if (servicesBuilder_ == null) {
        ensureServicesIsMutable();
        services_.add(index, builderForValue.build());
        onChanged();
      } else {
        servicesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public Builder addAllServices(
        java.lang.Iterable<? extends ai.sensorycloud.api.common.ServiceHealth> values) {
      if (servicesBuilder_ == null) {
        ensureServicesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, services_);
        onChanged();
      } else {
        servicesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public Builder clearServices() {
      if (servicesBuilder_ == null) {
        services_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        servicesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public Builder removeServices(int index) {
      if (servicesBuilder_ == null) {
        ensureServicesIsMutable();
        services_.remove(index);
        onChanged();
      } else {
        servicesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public ai.sensorycloud.api.common.ServiceHealth.Builder getServicesBuilder(
        int index) {
      return getServicesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public ai.sensorycloud.api.common.ServiceHealthOrBuilder getServicesOrBuilder(
        int index) {
      if (servicesBuilder_ == null) {
        return services_.get(index);  } else {
        return servicesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public java.util.List<? extends ai.sensorycloud.api.common.ServiceHealthOrBuilder> 
         getServicesOrBuilderList() {
      if (servicesBuilder_ != null) {
        return servicesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(services_);
      }
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public ai.sensorycloud.api.common.ServiceHealth.Builder addServicesBuilder() {
      return getServicesFieldBuilder().addBuilder(
          ai.sensorycloud.api.common.ServiceHealth.getDefaultInstance());
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public ai.sensorycloud.api.common.ServiceHealth.Builder addServicesBuilder(
        int index) {
      return getServicesFieldBuilder().addBuilder(
          index, ai.sensorycloud.api.common.ServiceHealth.getDefaultInstance());
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public java.util.List<ai.sensorycloud.api.common.ServiceHealth.Builder> 
         getServicesBuilderList() {
      return getServicesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        ai.sensorycloud.api.common.ServiceHealth, ai.sensorycloud.api.common.ServiceHealth.Builder, ai.sensorycloud.api.common.ServiceHealthOrBuilder> 
        getServicesFieldBuilder() {
      if (servicesBuilder_ == null) {
        servicesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            ai.sensorycloud.api.common.ServiceHealth, ai.sensorycloud.api.common.ServiceHealth.Builder, ai.sensorycloud.api.common.ServiceHealthOrBuilder>(
                services_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        services_ = null;
      }
      return servicesBuilder_;
    }

    private int serverType_ = 0;
    /**
     * <pre>
     * The type of server that is sending the health response
     * </pre>
     *
     * <code>.sensory.api.common.ServerType serverType = 5;</code>
     * @return The enum numeric value on the wire for serverType.
     */
    @java.lang.Override public int getServerTypeValue() {
      return serverType_;
    }
    /**
     * <pre>
     * The type of server that is sending the health response
     * </pre>
     *
     * <code>.sensory.api.common.ServerType serverType = 5;</code>
     * @param value The enum numeric value on the wire for serverType to set.
     * @return This builder for chaining.
     */
    public Builder setServerTypeValue(int value) {
      
      serverType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of server that is sending the health response
     * </pre>
     *
     * <code>.sensory.api.common.ServerType serverType = 5;</code>
     * @return The serverType.
     */
    @java.lang.Override
    public ai.sensorycloud.api.common.ServerType getServerType() {
      @SuppressWarnings("deprecation")
      ai.sensorycloud.api.common.ServerType result = ai.sensorycloud.api.common.ServerType.valueOf(serverType_);
      return result == null ? ai.sensorycloud.api.common.ServerType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The type of server that is sending the health response
     * </pre>
     *
     * <code>.sensory.api.common.ServerType serverType = 5;</code>
     * @param value The serverType to set.
     * @return This builder for chaining.
     */
    public Builder setServerType(ai.sensorycloud.api.common.ServerType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      serverType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of server that is sending the health response
     * </pre>
     *
     * <code>.sensory.api.common.ServerType serverType = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearServerType() {
      
      serverType_ = 0;
      onChanged();
      return this;
    }

    private boolean isLeader_ ;
    /**
     * <code>bool isLeader = 6;</code>
     * @return The isLeader.
     */
    @java.lang.Override
    public boolean getIsLeader() {
      return isLeader_;
    }
    /**
     * <code>bool isLeader = 6;</code>
     * @param value The isLeader to set.
     * @return This builder for chaining.
     */
    public Builder setIsLeader(boolean value) {
      
      isLeader_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool isLeader = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsLeader() {
      
      isLeader_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:sensory.api.common.ServerHealthResponse)
  }

  // @@protoc_insertion_point(class_scope:sensory.api.common.ServerHealthResponse)
  private static final ai.sensorycloud.api.common.ServerHealthResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ai.sensorycloud.api.common.ServerHealthResponse();
  }

  public static ai.sensorycloud.api.common.ServerHealthResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ServerHealthResponse>
      PARSER = new com.google.protobuf.AbstractParser<ServerHealthResponse>() {
    @java.lang.Override
    public ServerHealthResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ServerHealthResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ServerHealthResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ServerHealthResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ai.sensorycloud.api.common.ServerHealthResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

