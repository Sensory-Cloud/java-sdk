// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/common.proto

package ai.sensorycloud.api.common;

public interface ServerHealthResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sensory.api.common.ServerHealthResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Is healthy indication. True if all services are healthy.
   * </pre>
   *
   * <code>bool isHealthy = 1;</code>
   * @return The isHealthy.
   */
  boolean getIsHealthy();

  /**
   * <pre>
   * Currently running server version
   * </pre>
   *
   * <code>string serverVersion = 2;</code>
   * @return The serverVersion.
   */
  java.lang.String getServerVersion();
  /**
   * <pre>
   * Currently running server version
   * </pre>
   *
   * <code>string serverVersion = 2;</code>
   * @return The bytes for serverVersion.
   */
  com.google.protobuf.ByteString
      getServerVersionBytes();

  /**
   * <pre>
   * Unique Identifier for the particular server
   * </pre>
   *
   * <code>string id = 3;</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <pre>
   * Unique Identifier for the particular server
   * </pre>
   *
   * <code>string id = 3;</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  java.util.List<ai.sensorycloud.api.common.ServiceHealth> 
      getServicesList();
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  ai.sensorycloud.api.common.ServiceHealth getServices(int index);
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  int getServicesCount();
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  java.util.List<? extends ai.sensorycloud.api.common.ServiceHealthOrBuilder> 
      getServicesOrBuilderList();
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  ai.sensorycloud.api.common.ServiceHealthOrBuilder getServicesOrBuilder(
      int index);

  /**
   * <pre>
   * The type of server that is sending the health response
   * </pre>
   *
   * <code>.sensory.api.common.ServerType serverType = 5;</code>
   * @return The enum numeric value on the wire for serverType.
   */
  int getServerTypeValue();
  /**
   * <pre>
   * The type of server that is sending the health response
   * </pre>
   *
   * <code>.sensory.api.common.ServerType serverType = 5;</code>
   * @return The serverType.
   */
  ai.sensorycloud.api.common.ServerType getServerType();

  /**
   * <code>bool isLeader = 6;</code>
   * @return The isLeader.
   */
  boolean getIsLeader();
}
