// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1/audio/audio.proto

package ai.sensorycloud.api.v1.audio;

/**
 * <pre>
 * Provides information for an audio-based transcription
 * </pre>
 *
 * Protobuf type {@code sensory.api.v1.audio.TranscribeConfig}
 */
public final class TranscribeConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:sensory.api.v1.audio.TranscribeConfig)
    TranscribeConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TranscribeConfig.newBuilder() to construct.
  private TranscribeConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TranscribeConfig() {
    modelName_ = "";
    userId_ = "";
    vadSensitivity_ = 0;
    customVocabRewardThreshold_ = 0;
    customVocabularyId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TranscribeConfig();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.sensorycloud.api.v1.audio.SensoryApiV1AudioProto.internal_static_sensory_api_v1_audio_TranscribeConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.sensorycloud.api.v1.audio.SensoryApiV1AudioProto.internal_static_sensory_api_v1_audio_TranscribeConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.sensorycloud.api.v1.audio.TranscribeConfig.class, ai.sensorycloud.api.v1.audio.TranscribeConfig.Builder.class);
  }

  public static final int AUDIO_FIELD_NUMBER = 1;
  private ai.sensorycloud.api.v1.audio.AudioConfig audio_;
  /**
   * <pre>
   * Required. Provides information that specifies how to
   * process the request.
   * </pre>
   *
   * <code>.sensory.api.v1.audio.AudioConfig audio = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the audio field is set.
   */
  @java.lang.Override
  public boolean hasAudio() {
    return audio_ != null;
  }
  /**
   * <pre>
   * Required. Provides information that specifies how to
   * process the request.
   * </pre>
   *
   * <code>.sensory.api.v1.audio.AudioConfig audio = 1 [(.validate.rules) = { ... }</code>
   * @return The audio.
   */
  @java.lang.Override
  public ai.sensorycloud.api.v1.audio.AudioConfig getAudio() {
    return audio_ == null ? ai.sensorycloud.api.v1.audio.AudioConfig.getDefaultInstance() : audio_;
  }
  /**
   * <pre>
   * Required. Provides information that specifies how to
   * process the request.
   * </pre>
   *
   * <code>.sensory.api.v1.audio.AudioConfig audio = 1 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public ai.sensorycloud.api.v1.audio.AudioConfigOrBuilder getAudioOrBuilder() {
    return audio_ == null ? ai.sensorycloud.api.v1.audio.AudioConfig.getDefaultInstance() : audio_;
  }

  public static final int MODELNAME_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object modelName_ = "";
  /**
   * <pre>
   * Name of model to validate against
   * Models can be retrieved from the GetModels() gRPC call
   * </pre>
   *
   * <code>string modelName = 2 [(.validate.rules) = { ... }</code>
   * @return The modelName.
   */
  @java.lang.Override
  public java.lang.String getModelName() {
    java.lang.Object ref = modelName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      modelName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of model to validate against
   * Models can be retrieved from the GetModels() gRPC call
   * </pre>
   *
   * <code>string modelName = 2 [(.validate.rules) = { ... }</code>
   * @return The bytes for modelName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getModelNameBytes() {
    java.lang.Object ref = modelName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      modelName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USERID_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object userId_ = "";
  /**
   * <pre>
   * The unique user Identifer
   * </pre>
   *
   * <code>string userId = 3 [(.validate.rules) = { ... }</code>
   * @return The userId.
   */
  @java.lang.Override
  public java.lang.String getUserId() {
    java.lang.Object ref = userId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      userId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The unique user Identifer
   * </pre>
   *
   * <code>string userId = 3 [(.validate.rules) = { ... }</code>
   * @return The bytes for userId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUserIdBytes() {
    java.lang.Object ref = userId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      userId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENABLEPUNCTUATIONCAPITALIZATION_FIELD_NUMBER = 4;
  private boolean enablePunctuationCapitalization_ = false;
  /**
   * <pre>
   * A flag indicating if the transcription session should use punctuation and capitalization support
   * </pre>
   *
   * <code>bool enablePunctuationCapitalization = 4;</code>
   * @return The enablePunctuationCapitalization.
   */
  @java.lang.Override
  public boolean getEnablePunctuationCapitalization() {
    return enablePunctuationCapitalization_;
  }

  public static final int DOSINGLEUTTERANCE_FIELD_NUMBER = 5;
  private boolean doSingleUtterance_ = false;
  /**
   * <pre>
   * If enabled, the server will automatically close the stream once the user has stopped speaking
   * </pre>
   *
   * <code>bool doSingleUtterance = 5;</code>
   * @return The doSingleUtterance.
   */
  @java.lang.Override
  public boolean getDoSingleUtterance() {
    return doSingleUtterance_;
  }

  public static final int VADSENSITIVITY_FIELD_NUMBER = 6;
  private int vadSensitivity_ = 0;
  /**
   * <pre>
   * How sensitive the voice activiy detector should be when single utterance mode is enabled
   * LOW is the recommended sensitivity to use
   * </pre>
   *
   * <code>.sensory.api.v1.audio.ThresholdSensitivity vadSensitivity = 6;</code>
   * @return The enum numeric value on the wire for vadSensitivity.
   */
  @java.lang.Override public int getVadSensitivityValue() {
    return vadSensitivity_;
  }
  /**
   * <pre>
   * How sensitive the voice activiy detector should be when single utterance mode is enabled
   * LOW is the recommended sensitivity to use
   * </pre>
   *
   * <code>.sensory.api.v1.audio.ThresholdSensitivity vadSensitivity = 6;</code>
   * @return The vadSensitivity.
   */
  @java.lang.Override public ai.sensorycloud.api.v1.audio.ThresholdSensitivity getVadSensitivity() {
    ai.sensorycloud.api.v1.audio.ThresholdSensitivity result = ai.sensorycloud.api.v1.audio.ThresholdSensitivity.forNumber(vadSensitivity_);
    return result == null ? ai.sensorycloud.api.v1.audio.ThresholdSensitivity.UNRECOGNIZED : result;
  }

  public static final int VADDURATION_FIELD_NUMBER = 7;
  private float vadDuration_ = 0F;
  /**
   * <pre>
   * The number of seconds of silence to detect before automatically ending the stream when single utterance mode is enabled
   * If not specified, 1 second is used by default
   * </pre>
   *
   * <code>float vadDuration = 7;</code>
   * @return The vadDuration.
   */
  @java.lang.Override
  public float getVadDuration() {
    return vadDuration_;
  }

  public static final int CUSTOMVOCABREWARDTHRESHOLD_FIELD_NUMBER = 8;
  private int customVocabRewardThreshold_ = 0;
  /**
   * <pre>
   * Custom vocabulary reward threshold
   * </pre>
   *
   * <code>.sensory.api.v1.audio.ThresholdSensitivity customVocabRewardThreshold = 8;</code>
   * @return The enum numeric value on the wire for customVocabRewardThreshold.
   */
  @java.lang.Override public int getCustomVocabRewardThresholdValue() {
    return customVocabRewardThreshold_;
  }
  /**
   * <pre>
   * Custom vocabulary reward threshold
   * </pre>
   *
   * <code>.sensory.api.v1.audio.ThresholdSensitivity customVocabRewardThreshold = 8;</code>
   * @return The customVocabRewardThreshold.
   */
  @java.lang.Override public ai.sensorycloud.api.v1.audio.ThresholdSensitivity getCustomVocabRewardThreshold() {
    ai.sensorycloud.api.v1.audio.ThresholdSensitivity result = ai.sensorycloud.api.v1.audio.ThresholdSensitivity.forNumber(customVocabRewardThreshold_);
    return result == null ? ai.sensorycloud.api.v1.audio.ThresholdSensitivity.UNRECOGNIZED : result;
  }

  public static final int CUSTOMVOCABULARYID_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private volatile java.lang.Object customVocabularyId_ = "";
  /**
   * <pre>
   * the name of a custom vocabulary list stored on the server to use for this session
   * </pre>
   *
   * <code>string customVocabularyId = 9;</code>
   * @return The customVocabularyId.
   */
  @java.lang.Override
  public java.lang.String getCustomVocabularyId() {
    java.lang.Object ref = customVocabularyId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      customVocabularyId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the name of a custom vocabulary list stored on the server to use for this session
   * </pre>
   *
   * <code>string customVocabularyId = 9;</code>
   * @return The bytes for customVocabularyId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCustomVocabularyIdBytes() {
    java.lang.Object ref = customVocabularyId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      customVocabularyId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CUSTOMWORDLIST_FIELD_NUMBER = 10;
  private ai.sensorycloud.api.v1.audio.CustomVocabularyWords customWordList_;
  /**
   * <pre>
   * A list of up to 100 custom vocabulary words in the form &lt;word&gt;, &lt;pronunciation alternative 0&gt;, &lt;alternative 1&gt; etc...
   * </pre>
   *
   * <code>.sensory.api.v1.audio.CustomVocabularyWords customWordList = 10;</code>
   * @return Whether the customWordList field is set.
   */
  @java.lang.Override
  public boolean hasCustomWordList() {
    return customWordList_ != null;
  }
  /**
   * <pre>
   * A list of up to 100 custom vocabulary words in the form &lt;word&gt;, &lt;pronunciation alternative 0&gt;, &lt;alternative 1&gt; etc...
   * </pre>
   *
   * <code>.sensory.api.v1.audio.CustomVocabularyWords customWordList = 10;</code>
   * @return The customWordList.
   */
  @java.lang.Override
  public ai.sensorycloud.api.v1.audio.CustomVocabularyWords getCustomWordList() {
    return customWordList_ == null ? ai.sensorycloud.api.v1.audio.CustomVocabularyWords.getDefaultInstance() : customWordList_;
  }
  /**
   * <pre>
   * A list of up to 100 custom vocabulary words in the form &lt;word&gt;, &lt;pronunciation alternative 0&gt;, &lt;alternative 1&gt; etc...
   * </pre>
   *
   * <code>.sensory.api.v1.audio.CustomVocabularyWords customWordList = 10;</code>
   */
  @java.lang.Override
  public ai.sensorycloud.api.v1.audio.CustomVocabularyWordsOrBuilder getCustomWordListOrBuilder() {
    return customWordList_ == null ? ai.sensorycloud.api.v1.audio.CustomVocabularyWords.getDefaultInstance() : customWordList_;
  }

  public static final int DOOFFLINEMODE_FIELD_NUMBER = 11;
  private boolean doOfflineMode_ = false;
  /**
   * <pre>
   * Offline mode is faster at processing large transcripts, but increases the latency in individual transcription responses.
   * This mode is not recommended when streaming audio from a microphone, and should only be used for processing audio files.
   * </pre>
   *
   * <code>bool doOfflineMode = 11;</code>
   * @return The doOfflineMode.
   */
  @java.lang.Override
  public boolean getDoOfflineMode() {
    return doOfflineMode_;
  }

  public static final int WAKEWORDCONFIG_FIELD_NUMBER = 12;
  private ai.sensorycloud.api.v1.audio.TranscribeEventConfig wakeWordConfig_;
  /**
   * <pre>
   * A wakeword that must be recognized before transcription will be returned.
   * </pre>
   *
   * <code>.sensory.api.v1.audio.TranscribeEventConfig wakeWordConfig = 12;</code>
   * @return Whether the wakeWordConfig field is set.
   */
  @java.lang.Override
  public boolean hasWakeWordConfig() {
    return wakeWordConfig_ != null;
  }
  /**
   * <pre>
   * A wakeword that must be recognized before transcription will be returned.
   * </pre>
   *
   * <code>.sensory.api.v1.audio.TranscribeEventConfig wakeWordConfig = 12;</code>
   * @return The wakeWordConfig.
   */
  @java.lang.Override
  public ai.sensorycloud.api.v1.audio.TranscribeEventConfig getWakeWordConfig() {
    return wakeWordConfig_ == null ? ai.sensorycloud.api.v1.audio.TranscribeEventConfig.getDefaultInstance() : wakeWordConfig_;
  }
  /**
   * <pre>
   * A wakeword that must be recognized before transcription will be returned.
   * </pre>
   *
   * <code>.sensory.api.v1.audio.TranscribeEventConfig wakeWordConfig = 12;</code>
   */
  @java.lang.Override
  public ai.sensorycloud.api.v1.audio.TranscribeEventConfigOrBuilder getWakeWordConfigOrBuilder() {
    return wakeWordConfig_ == null ? ai.sensorycloud.api.v1.audio.TranscribeEventConfig.getDefaultInstance() : wakeWordConfig_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (audio_ != null) {
      output.writeMessage(1, getAudio());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(modelName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, modelName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(userId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, userId_);
    }
    if (enablePunctuationCapitalization_ != false) {
      output.writeBool(4, enablePunctuationCapitalization_);
    }
    if (doSingleUtterance_ != false) {
      output.writeBool(5, doSingleUtterance_);
    }
    if (vadSensitivity_ != ai.sensorycloud.api.v1.audio.ThresholdSensitivity.LOWEST.getNumber()) {
      output.writeEnum(6, vadSensitivity_);
    }
    if (java.lang.Float.floatToRawIntBits(vadDuration_) != 0) {
      output.writeFloat(7, vadDuration_);
    }
    if (customVocabRewardThreshold_ != ai.sensorycloud.api.v1.audio.ThresholdSensitivity.LOWEST.getNumber()) {
      output.writeEnum(8, customVocabRewardThreshold_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(customVocabularyId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, customVocabularyId_);
    }
    if (customWordList_ != null) {
      output.writeMessage(10, getCustomWordList());
    }
    if (doOfflineMode_ != false) {
      output.writeBool(11, doOfflineMode_);
    }
    if (wakeWordConfig_ != null) {
      output.writeMessage(12, getWakeWordConfig());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (audio_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getAudio());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(modelName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, modelName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(userId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, userId_);
    }
    if (enablePunctuationCapitalization_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, enablePunctuationCapitalization_);
    }
    if (doSingleUtterance_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, doSingleUtterance_);
    }
    if (vadSensitivity_ != ai.sensorycloud.api.v1.audio.ThresholdSensitivity.LOWEST.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(6, vadSensitivity_);
    }
    if (java.lang.Float.floatToRawIntBits(vadDuration_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(7, vadDuration_);
    }
    if (customVocabRewardThreshold_ != ai.sensorycloud.api.v1.audio.ThresholdSensitivity.LOWEST.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(8, customVocabRewardThreshold_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(customVocabularyId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, customVocabularyId_);
    }
    if (customWordList_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getCustomWordList());
    }
    if (doOfflineMode_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(11, doOfflineMode_);
    }
    if (wakeWordConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, getWakeWordConfig());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ai.sensorycloud.api.v1.audio.TranscribeConfig)) {
      return super.equals(obj);
    }
    ai.sensorycloud.api.v1.audio.TranscribeConfig other = (ai.sensorycloud.api.v1.audio.TranscribeConfig) obj;

    if (hasAudio() != other.hasAudio()) return false;
    if (hasAudio()) {
      if (!getAudio()
          .equals(other.getAudio())) return false;
    }
    if (!getModelName()
        .equals(other.getModelName())) return false;
    if (!getUserId()
        .equals(other.getUserId())) return false;
    if (getEnablePunctuationCapitalization()
        != other.getEnablePunctuationCapitalization()) return false;
    if (getDoSingleUtterance()
        != other.getDoSingleUtterance()) return false;
    if (vadSensitivity_ != other.vadSensitivity_) return false;
    if (java.lang.Float.floatToIntBits(getVadDuration())
        != java.lang.Float.floatToIntBits(
            other.getVadDuration())) return false;
    if (customVocabRewardThreshold_ != other.customVocabRewardThreshold_) return false;
    if (!getCustomVocabularyId()
        .equals(other.getCustomVocabularyId())) return false;
    if (hasCustomWordList() != other.hasCustomWordList()) return false;
    if (hasCustomWordList()) {
      if (!getCustomWordList()
          .equals(other.getCustomWordList())) return false;
    }
    if (getDoOfflineMode()
        != other.getDoOfflineMode()) return false;
    if (hasWakeWordConfig() != other.hasWakeWordConfig()) return false;
    if (hasWakeWordConfig()) {
      if (!getWakeWordConfig()
          .equals(other.getWakeWordConfig())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasAudio()) {
      hash = (37 * hash) + AUDIO_FIELD_NUMBER;
      hash = (53 * hash) + getAudio().hashCode();
    }
    hash = (37 * hash) + MODELNAME_FIELD_NUMBER;
    hash = (53 * hash) + getModelName().hashCode();
    hash = (37 * hash) + USERID_FIELD_NUMBER;
    hash = (53 * hash) + getUserId().hashCode();
    hash = (37 * hash) + ENABLEPUNCTUATIONCAPITALIZATION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEnablePunctuationCapitalization());
    hash = (37 * hash) + DOSINGLEUTTERANCE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDoSingleUtterance());
    hash = (37 * hash) + VADSENSITIVITY_FIELD_NUMBER;
    hash = (53 * hash) + vadSensitivity_;
    hash = (37 * hash) + VADDURATION_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getVadDuration());
    hash = (37 * hash) + CUSTOMVOCABREWARDTHRESHOLD_FIELD_NUMBER;
    hash = (53 * hash) + customVocabRewardThreshold_;
    hash = (37 * hash) + CUSTOMVOCABULARYID_FIELD_NUMBER;
    hash = (53 * hash) + getCustomVocabularyId().hashCode();
    if (hasCustomWordList()) {
      hash = (37 * hash) + CUSTOMWORDLIST_FIELD_NUMBER;
      hash = (53 * hash) + getCustomWordList().hashCode();
    }
    hash = (37 * hash) + DOOFFLINEMODE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDoOfflineMode());
    if (hasWakeWordConfig()) {
      hash = (37 * hash) + WAKEWORDCONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getWakeWordConfig().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ai.sensorycloud.api.v1.audio.TranscribeConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.sensorycloud.api.v1.audio.TranscribeConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.sensorycloud.api.v1.audio.TranscribeConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.sensorycloud.api.v1.audio.TranscribeConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.sensorycloud.api.v1.audio.TranscribeConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.sensorycloud.api.v1.audio.TranscribeConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.sensorycloud.api.v1.audio.TranscribeConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.sensorycloud.api.v1.audio.TranscribeConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ai.sensorycloud.api.v1.audio.TranscribeConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ai.sensorycloud.api.v1.audio.TranscribeConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.sensorycloud.api.v1.audio.TranscribeConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.sensorycloud.api.v1.audio.TranscribeConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ai.sensorycloud.api.v1.audio.TranscribeConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Provides information for an audio-based transcription
   * </pre>
   *
   * Protobuf type {@code sensory.api.v1.audio.TranscribeConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:sensory.api.v1.audio.TranscribeConfig)
      ai.sensorycloud.api.v1.audio.TranscribeConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.sensorycloud.api.v1.audio.SensoryApiV1AudioProto.internal_static_sensory_api_v1_audio_TranscribeConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.sensorycloud.api.v1.audio.SensoryApiV1AudioProto.internal_static_sensory_api_v1_audio_TranscribeConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.sensorycloud.api.v1.audio.TranscribeConfig.class, ai.sensorycloud.api.v1.audio.TranscribeConfig.Builder.class);
    }

    // Construct using ai.sensorycloud.api.v1.audio.TranscribeConfig.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      audio_ = null;
      if (audioBuilder_ != null) {
        audioBuilder_.dispose();
        audioBuilder_ = null;
      }
      modelName_ = "";
      userId_ = "";
      enablePunctuationCapitalization_ = false;
      doSingleUtterance_ = false;
      vadSensitivity_ = 0;
      vadDuration_ = 0F;
      customVocabRewardThreshold_ = 0;
      customVocabularyId_ = "";
      customWordList_ = null;
      if (customWordListBuilder_ != null) {
        customWordListBuilder_.dispose();
        customWordListBuilder_ = null;
      }
      doOfflineMode_ = false;
      wakeWordConfig_ = null;
      if (wakeWordConfigBuilder_ != null) {
        wakeWordConfigBuilder_.dispose();
        wakeWordConfigBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.sensorycloud.api.v1.audio.SensoryApiV1AudioProto.internal_static_sensory_api_v1_audio_TranscribeConfig_descriptor;
    }

    @java.lang.Override
    public ai.sensorycloud.api.v1.audio.TranscribeConfig getDefaultInstanceForType() {
      return ai.sensorycloud.api.v1.audio.TranscribeConfig.getDefaultInstance();
    }

    @java.lang.Override
    public ai.sensorycloud.api.v1.audio.TranscribeConfig build() {
      ai.sensorycloud.api.v1.audio.TranscribeConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ai.sensorycloud.api.v1.audio.TranscribeConfig buildPartial() {
      ai.sensorycloud.api.v1.audio.TranscribeConfig result = new ai.sensorycloud.api.v1.audio.TranscribeConfig(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(ai.sensorycloud.api.v1.audio.TranscribeConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.audio_ = audioBuilder_ == null
            ? audio_
            : audioBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.modelName_ = modelName_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.userId_ = userId_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.enablePunctuationCapitalization_ = enablePunctuationCapitalization_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.doSingleUtterance_ = doSingleUtterance_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.vadSensitivity_ = vadSensitivity_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.vadDuration_ = vadDuration_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.customVocabRewardThreshold_ = customVocabRewardThreshold_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.customVocabularyId_ = customVocabularyId_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.customWordList_ = customWordListBuilder_ == null
            ? customWordList_
            : customWordListBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.doOfflineMode_ = doOfflineMode_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.wakeWordConfig_ = wakeWordConfigBuilder_ == null
            ? wakeWordConfig_
            : wakeWordConfigBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.sensorycloud.api.v1.audio.TranscribeConfig) {
        return mergeFrom((ai.sensorycloud.api.v1.audio.TranscribeConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.sensorycloud.api.v1.audio.TranscribeConfig other) {
      if (other == ai.sensorycloud.api.v1.audio.TranscribeConfig.getDefaultInstance()) return this;
      if (other.hasAudio()) {
        mergeAudio(other.getAudio());
      }
      if (!other.getModelName().isEmpty()) {
        modelName_ = other.modelName_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getUserId().isEmpty()) {
        userId_ = other.userId_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.getEnablePunctuationCapitalization() != false) {
        setEnablePunctuationCapitalization(other.getEnablePunctuationCapitalization());
      }
      if (other.getDoSingleUtterance() != false) {
        setDoSingleUtterance(other.getDoSingleUtterance());
      }
      if (other.vadSensitivity_ != 0) {
        setVadSensitivityValue(other.getVadSensitivityValue());
      }
      if (other.getVadDuration() != 0F) {
        setVadDuration(other.getVadDuration());
      }
      if (other.customVocabRewardThreshold_ != 0) {
        setCustomVocabRewardThresholdValue(other.getCustomVocabRewardThresholdValue());
      }
      if (!other.getCustomVocabularyId().isEmpty()) {
        customVocabularyId_ = other.customVocabularyId_;
        bitField0_ |= 0x00000100;
        onChanged();
      }
      if (other.hasCustomWordList()) {
        mergeCustomWordList(other.getCustomWordList());
      }
      if (other.getDoOfflineMode() != false) {
        setDoOfflineMode(other.getDoOfflineMode());
      }
      if (other.hasWakeWordConfig()) {
        mergeWakeWordConfig(other.getWakeWordConfig());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getAudioFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              modelName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              userId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              enablePunctuationCapitalization_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              doSingleUtterance_ = input.readBool();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              vadSensitivity_ = input.readEnum();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 61: {
              vadDuration_ = input.readFloat();
              bitField0_ |= 0x00000040;
              break;
            } // case 61
            case 64: {
              customVocabRewardThreshold_ = input.readEnum();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 74: {
              customVocabularyId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000100;
              break;
            } // case 74
            case 82: {
              input.readMessage(
                  getCustomWordListFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000200;
              break;
            } // case 82
            case 88: {
              doOfflineMode_ = input.readBool();
              bitField0_ |= 0x00000400;
              break;
            } // case 88
            case 98: {
              input.readMessage(
                  getWakeWordConfigFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000800;
              break;
            } // case 98
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private ai.sensorycloud.api.v1.audio.AudioConfig audio_;
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.sensorycloud.api.v1.audio.AudioConfig, ai.sensorycloud.api.v1.audio.AudioConfig.Builder, ai.sensorycloud.api.v1.audio.AudioConfigOrBuilder> audioBuilder_;
    /**
     * <pre>
     * Required. Provides information that specifies how to
     * process the request.
     * </pre>
     *
     * <code>.sensory.api.v1.audio.AudioConfig audio = 1 [(.validate.rules) = { ... }</code>
     * @return Whether the audio field is set.
     */
    public boolean hasAudio() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Required. Provides information that specifies how to
     * process the request.
     * </pre>
     *
     * <code>.sensory.api.v1.audio.AudioConfig audio = 1 [(.validate.rules) = { ... }</code>
     * @return The audio.
     */
    public ai.sensorycloud.api.v1.audio.AudioConfig getAudio() {
      if (audioBuilder_ == null) {
        return audio_ == null ? ai.sensorycloud.api.v1.audio.AudioConfig.getDefaultInstance() : audio_;
      } else {
        return audioBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Required. Provides information that specifies how to
     * process the request.
     * </pre>
     *
     * <code>.sensory.api.v1.audio.AudioConfig audio = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder setAudio(ai.sensorycloud.api.v1.audio.AudioConfig value) {
      if (audioBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        audio_ = value;
      } else {
        audioBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Provides information that specifies how to
     * process the request.
     * </pre>
     *
     * <code>.sensory.api.v1.audio.AudioConfig audio = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder setAudio(
        ai.sensorycloud.api.v1.audio.AudioConfig.Builder builderForValue) {
      if (audioBuilder_ == null) {
        audio_ = builderForValue.build();
      } else {
        audioBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Provides information that specifies how to
     * process the request.
     * </pre>
     *
     * <code>.sensory.api.v1.audio.AudioConfig audio = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeAudio(ai.sensorycloud.api.v1.audio.AudioConfig value) {
      if (audioBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          audio_ != null &&
          audio_ != ai.sensorycloud.api.v1.audio.AudioConfig.getDefaultInstance()) {
          getAudioBuilder().mergeFrom(value);
        } else {
          audio_ = value;
        }
      } else {
        audioBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Provides information that specifies how to
     * process the request.
     * </pre>
     *
     * <code>.sensory.api.v1.audio.AudioConfig audio = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder clearAudio() {
      bitField0_ = (bitField0_ & ~0x00000001);
      audio_ = null;
      if (audioBuilder_ != null) {
        audioBuilder_.dispose();
        audioBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Provides information that specifies how to
     * process the request.
     * </pre>
     *
     * <code>.sensory.api.v1.audio.AudioConfig audio = 1 [(.validate.rules) = { ... }</code>
     */
    public ai.sensorycloud.api.v1.audio.AudioConfig.Builder getAudioBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getAudioFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Required. Provides information that specifies how to
     * process the request.
     * </pre>
     *
     * <code>.sensory.api.v1.audio.AudioConfig audio = 1 [(.validate.rules) = { ... }</code>
     */
    public ai.sensorycloud.api.v1.audio.AudioConfigOrBuilder getAudioOrBuilder() {
      if (audioBuilder_ != null) {
        return audioBuilder_.getMessageOrBuilder();
      } else {
        return audio_ == null ?
            ai.sensorycloud.api.v1.audio.AudioConfig.getDefaultInstance() : audio_;
      }
    }
    /**
     * <pre>
     * Required. Provides information that specifies how to
     * process the request.
     * </pre>
     *
     * <code>.sensory.api.v1.audio.AudioConfig audio = 1 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.sensorycloud.api.v1.audio.AudioConfig, ai.sensorycloud.api.v1.audio.AudioConfig.Builder, ai.sensorycloud.api.v1.audio.AudioConfigOrBuilder> 
        getAudioFieldBuilder() {
      if (audioBuilder_ == null) {
        audioBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.sensorycloud.api.v1.audio.AudioConfig, ai.sensorycloud.api.v1.audio.AudioConfig.Builder, ai.sensorycloud.api.v1.audio.AudioConfigOrBuilder>(
                getAudio(),
                getParentForChildren(),
                isClean());
        audio_ = null;
      }
      return audioBuilder_;
    }

    private java.lang.Object modelName_ = "";
    /**
     * <pre>
     * Name of model to validate against
     * Models can be retrieved from the GetModels() gRPC call
     * </pre>
     *
     * <code>string modelName = 2 [(.validate.rules) = { ... }</code>
     * @return The modelName.
     */
    public java.lang.String getModelName() {
      java.lang.Object ref = modelName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modelName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of model to validate against
     * Models can be retrieved from the GetModels() gRPC call
     * </pre>
     *
     * <code>string modelName = 2 [(.validate.rules) = { ... }</code>
     * @return The bytes for modelName.
     */
    public com.google.protobuf.ByteString
        getModelNameBytes() {
      java.lang.Object ref = modelName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modelName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of model to validate against
     * Models can be retrieved from the GetModels() gRPC call
     * </pre>
     *
     * <code>string modelName = 2 [(.validate.rules) = { ... }</code>
     * @param value The modelName to set.
     * @return This builder for chaining.
     */
    public Builder setModelName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      modelName_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of model to validate against
     * Models can be retrieved from the GetModels() gRPC call
     * </pre>
     *
     * <code>string modelName = 2 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearModelName() {
      modelName_ = getDefaultInstance().getModelName();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of model to validate against
     * Models can be retrieved from the GetModels() gRPC call
     * </pre>
     *
     * <code>string modelName = 2 [(.validate.rules) = { ... }</code>
     * @param value The bytes for modelName to set.
     * @return This builder for chaining.
     */
    public Builder setModelNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      modelName_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object userId_ = "";
    /**
     * <pre>
     * The unique user Identifer
     * </pre>
     *
     * <code>string userId = 3 [(.validate.rules) = { ... }</code>
     * @return The userId.
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        userId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The unique user Identifer
     * </pre>
     *
     * <code>string userId = 3 [(.validate.rules) = { ... }</code>
     * @return The bytes for userId.
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The unique user Identifer
     * </pre>
     *
     * <code>string userId = 3 [(.validate.rules) = { ... }</code>
     * @param value The userId to set.
     * @return This builder for chaining.
     */
    public Builder setUserId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      userId_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The unique user Identifer
     * </pre>
     *
     * <code>string userId = 3 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearUserId() {
      userId_ = getDefaultInstance().getUserId();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The unique user Identifer
     * </pre>
     *
     * <code>string userId = 3 [(.validate.rules) = { ... }</code>
     * @param value The bytes for userId to set.
     * @return This builder for chaining.
     */
    public Builder setUserIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      userId_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private boolean enablePunctuationCapitalization_ ;
    /**
     * <pre>
     * A flag indicating if the transcription session should use punctuation and capitalization support
     * </pre>
     *
     * <code>bool enablePunctuationCapitalization = 4;</code>
     * @return The enablePunctuationCapitalization.
     */
    @java.lang.Override
    public boolean getEnablePunctuationCapitalization() {
      return enablePunctuationCapitalization_;
    }
    /**
     * <pre>
     * A flag indicating if the transcription session should use punctuation and capitalization support
     * </pre>
     *
     * <code>bool enablePunctuationCapitalization = 4;</code>
     * @param value The enablePunctuationCapitalization to set.
     * @return This builder for chaining.
     */
    public Builder setEnablePunctuationCapitalization(boolean value) {

      enablePunctuationCapitalization_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A flag indicating if the transcription session should use punctuation and capitalization support
     * </pre>
     *
     * <code>bool enablePunctuationCapitalization = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnablePunctuationCapitalization() {
      bitField0_ = (bitField0_ & ~0x00000008);
      enablePunctuationCapitalization_ = false;
      onChanged();
      return this;
    }

    private boolean doSingleUtterance_ ;
    /**
     * <pre>
     * If enabled, the server will automatically close the stream once the user has stopped speaking
     * </pre>
     *
     * <code>bool doSingleUtterance = 5;</code>
     * @return The doSingleUtterance.
     */
    @java.lang.Override
    public boolean getDoSingleUtterance() {
      return doSingleUtterance_;
    }
    /**
     * <pre>
     * If enabled, the server will automatically close the stream once the user has stopped speaking
     * </pre>
     *
     * <code>bool doSingleUtterance = 5;</code>
     * @param value The doSingleUtterance to set.
     * @return This builder for chaining.
     */
    public Builder setDoSingleUtterance(boolean value) {

      doSingleUtterance_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If enabled, the server will automatically close the stream once the user has stopped speaking
     * </pre>
     *
     * <code>bool doSingleUtterance = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearDoSingleUtterance() {
      bitField0_ = (bitField0_ & ~0x00000010);
      doSingleUtterance_ = false;
      onChanged();
      return this;
    }

    private int vadSensitivity_ = 0;
    /**
     * <pre>
     * How sensitive the voice activiy detector should be when single utterance mode is enabled
     * LOW is the recommended sensitivity to use
     * </pre>
     *
     * <code>.sensory.api.v1.audio.ThresholdSensitivity vadSensitivity = 6;</code>
     * @return The enum numeric value on the wire for vadSensitivity.
     */
    @java.lang.Override public int getVadSensitivityValue() {
      return vadSensitivity_;
    }
    /**
     * <pre>
     * How sensitive the voice activiy detector should be when single utterance mode is enabled
     * LOW is the recommended sensitivity to use
     * </pre>
     *
     * <code>.sensory.api.v1.audio.ThresholdSensitivity vadSensitivity = 6;</code>
     * @param value The enum numeric value on the wire for vadSensitivity to set.
     * @return This builder for chaining.
     */
    public Builder setVadSensitivityValue(int value) {
      vadSensitivity_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How sensitive the voice activiy detector should be when single utterance mode is enabled
     * LOW is the recommended sensitivity to use
     * </pre>
     *
     * <code>.sensory.api.v1.audio.ThresholdSensitivity vadSensitivity = 6;</code>
     * @return The vadSensitivity.
     */
    @java.lang.Override
    public ai.sensorycloud.api.v1.audio.ThresholdSensitivity getVadSensitivity() {
      ai.sensorycloud.api.v1.audio.ThresholdSensitivity result = ai.sensorycloud.api.v1.audio.ThresholdSensitivity.forNumber(vadSensitivity_);
      return result == null ? ai.sensorycloud.api.v1.audio.ThresholdSensitivity.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * How sensitive the voice activiy detector should be when single utterance mode is enabled
     * LOW is the recommended sensitivity to use
     * </pre>
     *
     * <code>.sensory.api.v1.audio.ThresholdSensitivity vadSensitivity = 6;</code>
     * @param value The vadSensitivity to set.
     * @return This builder for chaining.
     */
    public Builder setVadSensitivity(ai.sensorycloud.api.v1.audio.ThresholdSensitivity value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000020;
      vadSensitivity_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How sensitive the voice activiy detector should be when single utterance mode is enabled
     * LOW is the recommended sensitivity to use
     * </pre>
     *
     * <code>.sensory.api.v1.audio.ThresholdSensitivity vadSensitivity = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearVadSensitivity() {
      bitField0_ = (bitField0_ & ~0x00000020);
      vadSensitivity_ = 0;
      onChanged();
      return this;
    }

    private float vadDuration_ ;
    /**
     * <pre>
     * The number of seconds of silence to detect before automatically ending the stream when single utterance mode is enabled
     * If not specified, 1 second is used by default
     * </pre>
     *
     * <code>float vadDuration = 7;</code>
     * @return The vadDuration.
     */
    @java.lang.Override
    public float getVadDuration() {
      return vadDuration_;
    }
    /**
     * <pre>
     * The number of seconds of silence to detect before automatically ending the stream when single utterance mode is enabled
     * If not specified, 1 second is used by default
     * </pre>
     *
     * <code>float vadDuration = 7;</code>
     * @param value The vadDuration to set.
     * @return This builder for chaining.
     */
    public Builder setVadDuration(float value) {

      vadDuration_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of seconds of silence to detect before automatically ending the stream when single utterance mode is enabled
     * If not specified, 1 second is used by default
     * </pre>
     *
     * <code>float vadDuration = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearVadDuration() {
      bitField0_ = (bitField0_ & ~0x00000040);
      vadDuration_ = 0F;
      onChanged();
      return this;
    }

    private int customVocabRewardThreshold_ = 0;
    /**
     * <pre>
     * Custom vocabulary reward threshold
     * </pre>
     *
     * <code>.sensory.api.v1.audio.ThresholdSensitivity customVocabRewardThreshold = 8;</code>
     * @return The enum numeric value on the wire for customVocabRewardThreshold.
     */
    @java.lang.Override public int getCustomVocabRewardThresholdValue() {
      return customVocabRewardThreshold_;
    }
    /**
     * <pre>
     * Custom vocabulary reward threshold
     * </pre>
     *
     * <code>.sensory.api.v1.audio.ThresholdSensitivity customVocabRewardThreshold = 8;</code>
     * @param value The enum numeric value on the wire for customVocabRewardThreshold to set.
     * @return This builder for chaining.
     */
    public Builder setCustomVocabRewardThresholdValue(int value) {
      customVocabRewardThreshold_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Custom vocabulary reward threshold
     * </pre>
     *
     * <code>.sensory.api.v1.audio.ThresholdSensitivity customVocabRewardThreshold = 8;</code>
     * @return The customVocabRewardThreshold.
     */
    @java.lang.Override
    public ai.sensorycloud.api.v1.audio.ThresholdSensitivity getCustomVocabRewardThreshold() {
      ai.sensorycloud.api.v1.audio.ThresholdSensitivity result = ai.sensorycloud.api.v1.audio.ThresholdSensitivity.forNumber(customVocabRewardThreshold_);
      return result == null ? ai.sensorycloud.api.v1.audio.ThresholdSensitivity.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Custom vocabulary reward threshold
     * </pre>
     *
     * <code>.sensory.api.v1.audio.ThresholdSensitivity customVocabRewardThreshold = 8;</code>
     * @param value The customVocabRewardThreshold to set.
     * @return This builder for chaining.
     */
    public Builder setCustomVocabRewardThreshold(ai.sensorycloud.api.v1.audio.ThresholdSensitivity value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000080;
      customVocabRewardThreshold_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Custom vocabulary reward threshold
     * </pre>
     *
     * <code>.sensory.api.v1.audio.ThresholdSensitivity customVocabRewardThreshold = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearCustomVocabRewardThreshold() {
      bitField0_ = (bitField0_ & ~0x00000080);
      customVocabRewardThreshold_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object customVocabularyId_ = "";
    /**
     * <pre>
     * the name of a custom vocabulary list stored on the server to use for this session
     * </pre>
     *
     * <code>string customVocabularyId = 9;</code>
     * @return The customVocabularyId.
     */
    public java.lang.String getCustomVocabularyId() {
      java.lang.Object ref = customVocabularyId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        customVocabularyId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the name of a custom vocabulary list stored on the server to use for this session
     * </pre>
     *
     * <code>string customVocabularyId = 9;</code>
     * @return The bytes for customVocabularyId.
     */
    public com.google.protobuf.ByteString
        getCustomVocabularyIdBytes() {
      java.lang.Object ref = customVocabularyId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        customVocabularyId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the name of a custom vocabulary list stored on the server to use for this session
     * </pre>
     *
     * <code>string customVocabularyId = 9;</code>
     * @param value The customVocabularyId to set.
     * @return This builder for chaining.
     */
    public Builder setCustomVocabularyId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      customVocabularyId_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the name of a custom vocabulary list stored on the server to use for this session
     * </pre>
     *
     * <code>string customVocabularyId = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearCustomVocabularyId() {
      customVocabularyId_ = getDefaultInstance().getCustomVocabularyId();
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the name of a custom vocabulary list stored on the server to use for this session
     * </pre>
     *
     * <code>string customVocabularyId = 9;</code>
     * @param value The bytes for customVocabularyId to set.
     * @return This builder for chaining.
     */
    public Builder setCustomVocabularyIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      customVocabularyId_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }

    private ai.sensorycloud.api.v1.audio.CustomVocabularyWords customWordList_;
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.sensorycloud.api.v1.audio.CustomVocabularyWords, ai.sensorycloud.api.v1.audio.CustomVocabularyWords.Builder, ai.sensorycloud.api.v1.audio.CustomVocabularyWordsOrBuilder> customWordListBuilder_;
    /**
     * <pre>
     * A list of up to 100 custom vocabulary words in the form &lt;word&gt;, &lt;pronunciation alternative 0&gt;, &lt;alternative 1&gt; etc...
     * </pre>
     *
     * <code>.sensory.api.v1.audio.CustomVocabularyWords customWordList = 10;</code>
     * @return Whether the customWordList field is set.
     */
    public boolean hasCustomWordList() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * A list of up to 100 custom vocabulary words in the form &lt;word&gt;, &lt;pronunciation alternative 0&gt;, &lt;alternative 1&gt; etc...
     * </pre>
     *
     * <code>.sensory.api.v1.audio.CustomVocabularyWords customWordList = 10;</code>
     * @return The customWordList.
     */
    public ai.sensorycloud.api.v1.audio.CustomVocabularyWords getCustomWordList() {
      if (customWordListBuilder_ == null) {
        return customWordList_ == null ? ai.sensorycloud.api.v1.audio.CustomVocabularyWords.getDefaultInstance() : customWordList_;
      } else {
        return customWordListBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * A list of up to 100 custom vocabulary words in the form &lt;word&gt;, &lt;pronunciation alternative 0&gt;, &lt;alternative 1&gt; etc...
     * </pre>
     *
     * <code>.sensory.api.v1.audio.CustomVocabularyWords customWordList = 10;</code>
     */
    public Builder setCustomWordList(ai.sensorycloud.api.v1.audio.CustomVocabularyWords value) {
      if (customWordListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        customWordList_ = value;
      } else {
        customWordListBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of up to 100 custom vocabulary words in the form &lt;word&gt;, &lt;pronunciation alternative 0&gt;, &lt;alternative 1&gt; etc...
     * </pre>
     *
     * <code>.sensory.api.v1.audio.CustomVocabularyWords customWordList = 10;</code>
     */
    public Builder setCustomWordList(
        ai.sensorycloud.api.v1.audio.CustomVocabularyWords.Builder builderForValue) {
      if (customWordListBuilder_ == null) {
        customWordList_ = builderForValue.build();
      } else {
        customWordListBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of up to 100 custom vocabulary words in the form &lt;word&gt;, &lt;pronunciation alternative 0&gt;, &lt;alternative 1&gt; etc...
     * </pre>
     *
     * <code>.sensory.api.v1.audio.CustomVocabularyWords customWordList = 10;</code>
     */
    public Builder mergeCustomWordList(ai.sensorycloud.api.v1.audio.CustomVocabularyWords value) {
      if (customWordListBuilder_ == null) {
        if (((bitField0_ & 0x00000200) != 0) &&
          customWordList_ != null &&
          customWordList_ != ai.sensorycloud.api.v1.audio.CustomVocabularyWords.getDefaultInstance()) {
          getCustomWordListBuilder().mergeFrom(value);
        } else {
          customWordList_ = value;
        }
      } else {
        customWordListBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of up to 100 custom vocabulary words in the form &lt;word&gt;, &lt;pronunciation alternative 0&gt;, &lt;alternative 1&gt; etc...
     * </pre>
     *
     * <code>.sensory.api.v1.audio.CustomVocabularyWords customWordList = 10;</code>
     */
    public Builder clearCustomWordList() {
      bitField0_ = (bitField0_ & ~0x00000200);
      customWordList_ = null;
      if (customWordListBuilder_ != null) {
        customWordListBuilder_.dispose();
        customWordListBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of up to 100 custom vocabulary words in the form &lt;word&gt;, &lt;pronunciation alternative 0&gt;, &lt;alternative 1&gt; etc...
     * </pre>
     *
     * <code>.sensory.api.v1.audio.CustomVocabularyWords customWordList = 10;</code>
     */
    public ai.sensorycloud.api.v1.audio.CustomVocabularyWords.Builder getCustomWordListBuilder() {
      bitField0_ |= 0x00000200;
      onChanged();
      return getCustomWordListFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A list of up to 100 custom vocabulary words in the form &lt;word&gt;, &lt;pronunciation alternative 0&gt;, &lt;alternative 1&gt; etc...
     * </pre>
     *
     * <code>.sensory.api.v1.audio.CustomVocabularyWords customWordList = 10;</code>
     */
    public ai.sensorycloud.api.v1.audio.CustomVocabularyWordsOrBuilder getCustomWordListOrBuilder() {
      if (customWordListBuilder_ != null) {
        return customWordListBuilder_.getMessageOrBuilder();
      } else {
        return customWordList_ == null ?
            ai.sensorycloud.api.v1.audio.CustomVocabularyWords.getDefaultInstance() : customWordList_;
      }
    }
    /**
     * <pre>
     * A list of up to 100 custom vocabulary words in the form &lt;word&gt;, &lt;pronunciation alternative 0&gt;, &lt;alternative 1&gt; etc...
     * </pre>
     *
     * <code>.sensory.api.v1.audio.CustomVocabularyWords customWordList = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.sensorycloud.api.v1.audio.CustomVocabularyWords, ai.sensorycloud.api.v1.audio.CustomVocabularyWords.Builder, ai.sensorycloud.api.v1.audio.CustomVocabularyWordsOrBuilder> 
        getCustomWordListFieldBuilder() {
      if (customWordListBuilder_ == null) {
        customWordListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.sensorycloud.api.v1.audio.CustomVocabularyWords, ai.sensorycloud.api.v1.audio.CustomVocabularyWords.Builder, ai.sensorycloud.api.v1.audio.CustomVocabularyWordsOrBuilder>(
                getCustomWordList(),
                getParentForChildren(),
                isClean());
        customWordList_ = null;
      }
      return customWordListBuilder_;
    }

    private boolean doOfflineMode_ ;
    /**
     * <pre>
     * Offline mode is faster at processing large transcripts, but increases the latency in individual transcription responses.
     * This mode is not recommended when streaming audio from a microphone, and should only be used for processing audio files.
     * </pre>
     *
     * <code>bool doOfflineMode = 11;</code>
     * @return The doOfflineMode.
     */
    @java.lang.Override
    public boolean getDoOfflineMode() {
      return doOfflineMode_;
    }
    /**
     * <pre>
     * Offline mode is faster at processing large transcripts, but increases the latency in individual transcription responses.
     * This mode is not recommended when streaming audio from a microphone, and should only be used for processing audio files.
     * </pre>
     *
     * <code>bool doOfflineMode = 11;</code>
     * @param value The doOfflineMode to set.
     * @return This builder for chaining.
     */
    public Builder setDoOfflineMode(boolean value) {

      doOfflineMode_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Offline mode is faster at processing large transcripts, but increases the latency in individual transcription responses.
     * This mode is not recommended when streaming audio from a microphone, and should only be used for processing audio files.
     * </pre>
     *
     * <code>bool doOfflineMode = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearDoOfflineMode() {
      bitField0_ = (bitField0_ & ~0x00000400);
      doOfflineMode_ = false;
      onChanged();
      return this;
    }

    private ai.sensorycloud.api.v1.audio.TranscribeEventConfig wakeWordConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.sensorycloud.api.v1.audio.TranscribeEventConfig, ai.sensorycloud.api.v1.audio.TranscribeEventConfig.Builder, ai.sensorycloud.api.v1.audio.TranscribeEventConfigOrBuilder> wakeWordConfigBuilder_;
    /**
     * <pre>
     * A wakeword that must be recognized before transcription will be returned.
     * </pre>
     *
     * <code>.sensory.api.v1.audio.TranscribeEventConfig wakeWordConfig = 12;</code>
     * @return Whether the wakeWordConfig field is set.
     */
    public boolean hasWakeWordConfig() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * A wakeword that must be recognized before transcription will be returned.
     * </pre>
     *
     * <code>.sensory.api.v1.audio.TranscribeEventConfig wakeWordConfig = 12;</code>
     * @return The wakeWordConfig.
     */
    public ai.sensorycloud.api.v1.audio.TranscribeEventConfig getWakeWordConfig() {
      if (wakeWordConfigBuilder_ == null) {
        return wakeWordConfig_ == null ? ai.sensorycloud.api.v1.audio.TranscribeEventConfig.getDefaultInstance() : wakeWordConfig_;
      } else {
        return wakeWordConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * A wakeword that must be recognized before transcription will be returned.
     * </pre>
     *
     * <code>.sensory.api.v1.audio.TranscribeEventConfig wakeWordConfig = 12;</code>
     */
    public Builder setWakeWordConfig(ai.sensorycloud.api.v1.audio.TranscribeEventConfig value) {
      if (wakeWordConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        wakeWordConfig_ = value;
      } else {
        wakeWordConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A wakeword that must be recognized before transcription will be returned.
     * </pre>
     *
     * <code>.sensory.api.v1.audio.TranscribeEventConfig wakeWordConfig = 12;</code>
     */
    public Builder setWakeWordConfig(
        ai.sensorycloud.api.v1.audio.TranscribeEventConfig.Builder builderForValue) {
      if (wakeWordConfigBuilder_ == null) {
        wakeWordConfig_ = builderForValue.build();
      } else {
        wakeWordConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A wakeword that must be recognized before transcription will be returned.
     * </pre>
     *
     * <code>.sensory.api.v1.audio.TranscribeEventConfig wakeWordConfig = 12;</code>
     */
    public Builder mergeWakeWordConfig(ai.sensorycloud.api.v1.audio.TranscribeEventConfig value) {
      if (wakeWordConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000800) != 0) &&
          wakeWordConfig_ != null &&
          wakeWordConfig_ != ai.sensorycloud.api.v1.audio.TranscribeEventConfig.getDefaultInstance()) {
          getWakeWordConfigBuilder().mergeFrom(value);
        } else {
          wakeWordConfig_ = value;
        }
      } else {
        wakeWordConfigBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A wakeword that must be recognized before transcription will be returned.
     * </pre>
     *
     * <code>.sensory.api.v1.audio.TranscribeEventConfig wakeWordConfig = 12;</code>
     */
    public Builder clearWakeWordConfig() {
      bitField0_ = (bitField0_ & ~0x00000800);
      wakeWordConfig_ = null;
      if (wakeWordConfigBuilder_ != null) {
        wakeWordConfigBuilder_.dispose();
        wakeWordConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A wakeword that must be recognized before transcription will be returned.
     * </pre>
     *
     * <code>.sensory.api.v1.audio.TranscribeEventConfig wakeWordConfig = 12;</code>
     */
    public ai.sensorycloud.api.v1.audio.TranscribeEventConfig.Builder getWakeWordConfigBuilder() {
      bitField0_ |= 0x00000800;
      onChanged();
      return getWakeWordConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A wakeword that must be recognized before transcription will be returned.
     * </pre>
     *
     * <code>.sensory.api.v1.audio.TranscribeEventConfig wakeWordConfig = 12;</code>
     */
    public ai.sensorycloud.api.v1.audio.TranscribeEventConfigOrBuilder getWakeWordConfigOrBuilder() {
      if (wakeWordConfigBuilder_ != null) {
        return wakeWordConfigBuilder_.getMessageOrBuilder();
      } else {
        return wakeWordConfig_ == null ?
            ai.sensorycloud.api.v1.audio.TranscribeEventConfig.getDefaultInstance() : wakeWordConfig_;
      }
    }
    /**
     * <pre>
     * A wakeword that must be recognized before transcription will be returned.
     * </pre>
     *
     * <code>.sensory.api.v1.audio.TranscribeEventConfig wakeWordConfig = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.sensorycloud.api.v1.audio.TranscribeEventConfig, ai.sensorycloud.api.v1.audio.TranscribeEventConfig.Builder, ai.sensorycloud.api.v1.audio.TranscribeEventConfigOrBuilder> 
        getWakeWordConfigFieldBuilder() {
      if (wakeWordConfigBuilder_ == null) {
        wakeWordConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.sensorycloud.api.v1.audio.TranscribeEventConfig, ai.sensorycloud.api.v1.audio.TranscribeEventConfig.Builder, ai.sensorycloud.api.v1.audio.TranscribeEventConfigOrBuilder>(
                getWakeWordConfig(),
                getParentForChildren(),
                isClean());
        wakeWordConfig_ = null;
      }
      return wakeWordConfigBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:sensory.api.v1.audio.TranscribeConfig)
  }

  // @@protoc_insertion_point(class_scope:sensory.api.v1.audio.TranscribeConfig)
  private static final ai.sensorycloud.api.v1.audio.TranscribeConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ai.sensorycloud.api.v1.audio.TranscribeConfig();
  }

  public static ai.sensorycloud.api.v1.audio.TranscribeConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TranscribeConfig>
      PARSER = new com.google.protobuf.AbstractParser<TranscribeConfig>() {
    @java.lang.Override
    public TranscribeConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<TranscribeConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TranscribeConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ai.sensorycloud.api.v1.audio.TranscribeConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

