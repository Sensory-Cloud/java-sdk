// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1/audio/audio.proto

package ai.sensorycloud.api.v1.audio;

public interface AudioConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sensory.api.v1.audio.AudioConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Encoding of all sent audio data.
   * </pre>
   *
   * <code>.sensory.api.v1.audio.AudioConfig.AudioEncoding encoding = 1 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for encoding.
   */
  int getEncodingValue();
  /**
   * <pre>
   * Encoding of all sent audio data.
   * </pre>
   *
   * <code>.sensory.api.v1.audio.AudioConfig.AudioEncoding encoding = 1 [(.validate.rules) = { ... }</code>
   * @return The encoding.
   */
  ai.sensorycloud.api.v1.audio.AudioConfig.AudioEncoding getEncoding();

  /**
   * <pre>
   * Sample rate in Hertz of the audio data sent in all messages. 16000Hz is optimal.
   * </pre>
   *
   * <code>int32 sampleRateHertz = 2 [(.validate.rules) = { ... }</code>
   * @return The sampleRateHertz.
   */
  int getSampleRateHertz();

  /**
   * <pre>
   * The number of channels in the input audio data.
   * </pre>
   *
   * <code>int32 audioChannelCount = 3 [(.validate.rules) = { ... }</code>
   * @return The audioChannelCount.
   */
  int getAudioChannelCount();

  /**
   * <pre>
   * Required. The language of the supplied audio as a
   * [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
   * Example: "en-US".
   * </pre>
   *
   * <code>string languageCode = 4;</code>
   * @return The languageCode.
   */
  java.lang.String getLanguageCode();
  /**
   * <pre>
   * Required. The language of the supplied audio as a
   * [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
   * Example: "en-US".
   * </pre>
   *
   * <code>string languageCode = 4;</code>
   * @return The bytes for languageCode.
   */
  com.google.protobuf.ByteString
      getLanguageCodeBytes();
}
