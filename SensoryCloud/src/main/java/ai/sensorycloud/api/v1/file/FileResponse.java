// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1/file/file.proto

package ai.sensorycloud.api.v1.file;

/**
 * <pre>
 * The top-level message returned from the client for the `Download` method.
 * Multiple `FileResponse` messages are sent in a stream. The first message
 * will contain an `info` message and will not contain `FileChunk`.
 * All subsequent messages must contain `FileChunk` and
 * must not contain an `info` message.
 * </pre>
 *
 * Protobuf type {@code sensory.api.v1.file.FileResponse}
 */
public final class FileResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:sensory.api.v1.file.FileResponse)
    FileResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FileResponse.newBuilder() to construct.
  private FileResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FileResponse() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new FileResponse();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.sensorycloud.api.v1.file.SensoryApiV1FileProto.internal_static_sensory_api_v1_file_FileResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.sensorycloud.api.v1.file.SensoryApiV1FileProto.internal_static_sensory_api_v1_file_FileResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.sensorycloud.api.v1.file.FileResponse.class, ai.sensorycloud.api.v1.file.FileResponse.Builder.class);
  }

  private int streamingResponseCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object streamingResponse_;
  public enum StreamingResponseCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    INFO(1),
    CHUNK(2),
    STREAMINGRESPONSE_NOT_SET(0);
    private final int value;
    private StreamingResponseCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static StreamingResponseCase valueOf(int value) {
      return forNumber(value);
    }

    public static StreamingResponseCase forNumber(int value) {
      switch (value) {
        case 1: return INFO;
        case 2: return CHUNK;
        case 0: return STREAMINGRESPONSE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public StreamingResponseCase
  getStreamingResponseCase() {
    return StreamingResponseCase.forNumber(
        streamingResponseCase_);
  }

  public static final int INFO_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Provides information about the requested file.
   * </pre>
   *
   * <code>.sensory.api.v1.file.FileInfo info = 1;</code>
   * @return Whether the info field is set.
   */
  @java.lang.Override
  public boolean hasInfo() {
    return streamingResponseCase_ == 1;
  }
  /**
   * <pre>
   * Provides information about the requested file.
   * </pre>
   *
   * <code>.sensory.api.v1.file.FileInfo info = 1;</code>
   * @return The info.
   */
  @java.lang.Override
  public ai.sensorycloud.api.v1.file.FileInfo getInfo() {
    if (streamingResponseCase_ == 1) {
       return (ai.sensorycloud.api.v1.file.FileInfo) streamingResponse_;
    }
    return ai.sensorycloud.api.v1.file.FileInfo.getDefaultInstance();
  }
  /**
   * <pre>
   * Provides information about the requested file.
   * </pre>
   *
   * <code>.sensory.api.v1.file.FileInfo info = 1;</code>
   */
  @java.lang.Override
  public ai.sensorycloud.api.v1.file.FileInfoOrBuilder getInfoOrBuilder() {
    if (streamingResponseCase_ == 1) {
       return (ai.sensorycloud.api.v1.file.FileInfo) streamingResponse_;
    }
    return ai.sensorycloud.api.v1.file.FileInfo.getDefaultInstance();
  }

  public static final int CHUNK_FIELD_NUMBER = 2;
  /**
   * <pre>
   * A chunk of the downloaded file
   * </pre>
   *
   * <code>.sensory.api.v1.file.FileChunk chunk = 2;</code>
   * @return Whether the chunk field is set.
   */
  @java.lang.Override
  public boolean hasChunk() {
    return streamingResponseCase_ == 2;
  }
  /**
   * <pre>
   * A chunk of the downloaded file
   * </pre>
   *
   * <code>.sensory.api.v1.file.FileChunk chunk = 2;</code>
   * @return The chunk.
   */
  @java.lang.Override
  public ai.sensorycloud.api.v1.file.FileChunk getChunk() {
    if (streamingResponseCase_ == 2) {
       return (ai.sensorycloud.api.v1.file.FileChunk) streamingResponse_;
    }
    return ai.sensorycloud.api.v1.file.FileChunk.getDefaultInstance();
  }
  /**
   * <pre>
   * A chunk of the downloaded file
   * </pre>
   *
   * <code>.sensory.api.v1.file.FileChunk chunk = 2;</code>
   */
  @java.lang.Override
  public ai.sensorycloud.api.v1.file.FileChunkOrBuilder getChunkOrBuilder() {
    if (streamingResponseCase_ == 2) {
       return (ai.sensorycloud.api.v1.file.FileChunk) streamingResponse_;
    }
    return ai.sensorycloud.api.v1.file.FileChunk.getDefaultInstance();
  }

  public static final int COMPLETE_FIELD_NUMBER = 3;
  private boolean complete_ = false;
  /**
   * <pre>
   * File download complete flag
   * </pre>
   *
   * <code>bool complete = 3;</code>
   * @return The complete.
   */
  @java.lang.Override
  public boolean getComplete() {
    return complete_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (streamingResponseCase_ == 1) {
      output.writeMessage(1, (ai.sensorycloud.api.v1.file.FileInfo) streamingResponse_);
    }
    if (streamingResponseCase_ == 2) {
      output.writeMessage(2, (ai.sensorycloud.api.v1.file.FileChunk) streamingResponse_);
    }
    if (complete_ != false) {
      output.writeBool(3, complete_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (streamingResponseCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (ai.sensorycloud.api.v1.file.FileInfo) streamingResponse_);
    }
    if (streamingResponseCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (ai.sensorycloud.api.v1.file.FileChunk) streamingResponse_);
    }
    if (complete_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, complete_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ai.sensorycloud.api.v1.file.FileResponse)) {
      return super.equals(obj);
    }
    ai.sensorycloud.api.v1.file.FileResponse other = (ai.sensorycloud.api.v1.file.FileResponse) obj;

    if (getComplete()
        != other.getComplete()) return false;
    if (!getStreamingResponseCase().equals(other.getStreamingResponseCase())) return false;
    switch (streamingResponseCase_) {
      case 1:
        if (!getInfo()
            .equals(other.getInfo())) return false;
        break;
      case 2:
        if (!getChunk()
            .equals(other.getChunk())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + COMPLETE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getComplete());
    switch (streamingResponseCase_) {
      case 1:
        hash = (37 * hash) + INFO_FIELD_NUMBER;
        hash = (53 * hash) + getInfo().hashCode();
        break;
      case 2:
        hash = (37 * hash) + CHUNK_FIELD_NUMBER;
        hash = (53 * hash) + getChunk().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ai.sensorycloud.api.v1.file.FileResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.sensorycloud.api.v1.file.FileResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.sensorycloud.api.v1.file.FileResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.sensorycloud.api.v1.file.FileResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.sensorycloud.api.v1.file.FileResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.sensorycloud.api.v1.file.FileResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.sensorycloud.api.v1.file.FileResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.sensorycloud.api.v1.file.FileResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ai.sensorycloud.api.v1.file.FileResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ai.sensorycloud.api.v1.file.FileResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.sensorycloud.api.v1.file.FileResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.sensorycloud.api.v1.file.FileResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ai.sensorycloud.api.v1.file.FileResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The top-level message returned from the client for the `Download` method.
   * Multiple `FileResponse` messages are sent in a stream. The first message
   * will contain an `info` message and will not contain `FileChunk`.
   * All subsequent messages must contain `FileChunk` and
   * must not contain an `info` message.
   * </pre>
   *
   * Protobuf type {@code sensory.api.v1.file.FileResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:sensory.api.v1.file.FileResponse)
      ai.sensorycloud.api.v1.file.FileResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.sensorycloud.api.v1.file.SensoryApiV1FileProto.internal_static_sensory_api_v1_file_FileResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.sensorycloud.api.v1.file.SensoryApiV1FileProto.internal_static_sensory_api_v1_file_FileResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.sensorycloud.api.v1.file.FileResponse.class, ai.sensorycloud.api.v1.file.FileResponse.Builder.class);
    }

    // Construct using ai.sensorycloud.api.v1.file.FileResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (infoBuilder_ != null) {
        infoBuilder_.clear();
      }
      if (chunkBuilder_ != null) {
        chunkBuilder_.clear();
      }
      complete_ = false;
      streamingResponseCase_ = 0;
      streamingResponse_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.sensorycloud.api.v1.file.SensoryApiV1FileProto.internal_static_sensory_api_v1_file_FileResponse_descriptor;
    }

    @java.lang.Override
    public ai.sensorycloud.api.v1.file.FileResponse getDefaultInstanceForType() {
      return ai.sensorycloud.api.v1.file.FileResponse.getDefaultInstance();
    }

    @java.lang.Override
    public ai.sensorycloud.api.v1.file.FileResponse build() {
      ai.sensorycloud.api.v1.file.FileResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ai.sensorycloud.api.v1.file.FileResponse buildPartial() {
      ai.sensorycloud.api.v1.file.FileResponse result = new ai.sensorycloud.api.v1.file.FileResponse(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(ai.sensorycloud.api.v1.file.FileResponse result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.complete_ = complete_;
      }
    }

    private void buildPartialOneofs(ai.sensorycloud.api.v1.file.FileResponse result) {
      result.streamingResponseCase_ = streamingResponseCase_;
      result.streamingResponse_ = this.streamingResponse_;
      if (streamingResponseCase_ == 1 &&
          infoBuilder_ != null) {
        result.streamingResponse_ = infoBuilder_.build();
      }
      if (streamingResponseCase_ == 2 &&
          chunkBuilder_ != null) {
        result.streamingResponse_ = chunkBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.sensorycloud.api.v1.file.FileResponse) {
        return mergeFrom((ai.sensorycloud.api.v1.file.FileResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.sensorycloud.api.v1.file.FileResponse other) {
      if (other == ai.sensorycloud.api.v1.file.FileResponse.getDefaultInstance()) return this;
      if (other.getComplete() != false) {
        setComplete(other.getComplete());
      }
      switch (other.getStreamingResponseCase()) {
        case INFO: {
          mergeInfo(other.getInfo());
          break;
        }
        case CHUNK: {
          mergeChunk(other.getChunk());
          break;
        }
        case STREAMINGRESPONSE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              streamingResponseCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getChunkFieldBuilder().getBuilder(),
                  extensionRegistry);
              streamingResponseCase_ = 2;
              break;
            } // case 18
            case 24: {
              complete_ = input.readBool();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int streamingResponseCase_ = 0;
    private java.lang.Object streamingResponse_;
    public StreamingResponseCase
        getStreamingResponseCase() {
      return StreamingResponseCase.forNumber(
          streamingResponseCase_);
    }

    public Builder clearStreamingResponse() {
      streamingResponseCase_ = 0;
      streamingResponse_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.sensorycloud.api.v1.file.FileInfo, ai.sensorycloud.api.v1.file.FileInfo.Builder, ai.sensorycloud.api.v1.file.FileInfoOrBuilder> infoBuilder_;
    /**
     * <pre>
     * Provides information about the requested file.
     * </pre>
     *
     * <code>.sensory.api.v1.file.FileInfo info = 1;</code>
     * @return Whether the info field is set.
     */
    @java.lang.Override
    public boolean hasInfo() {
      return streamingResponseCase_ == 1;
    }
    /**
     * <pre>
     * Provides information about the requested file.
     * </pre>
     *
     * <code>.sensory.api.v1.file.FileInfo info = 1;</code>
     * @return The info.
     */
    @java.lang.Override
    public ai.sensorycloud.api.v1.file.FileInfo getInfo() {
      if (infoBuilder_ == null) {
        if (streamingResponseCase_ == 1) {
          return (ai.sensorycloud.api.v1.file.FileInfo) streamingResponse_;
        }
        return ai.sensorycloud.api.v1.file.FileInfo.getDefaultInstance();
      } else {
        if (streamingResponseCase_ == 1) {
          return infoBuilder_.getMessage();
        }
        return ai.sensorycloud.api.v1.file.FileInfo.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Provides information about the requested file.
     * </pre>
     *
     * <code>.sensory.api.v1.file.FileInfo info = 1;</code>
     */
    public Builder setInfo(ai.sensorycloud.api.v1.file.FileInfo value) {
      if (infoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        streamingResponse_ = value;
        onChanged();
      } else {
        infoBuilder_.setMessage(value);
      }
      streamingResponseCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Provides information about the requested file.
     * </pre>
     *
     * <code>.sensory.api.v1.file.FileInfo info = 1;</code>
     */
    public Builder setInfo(
        ai.sensorycloud.api.v1.file.FileInfo.Builder builderForValue) {
      if (infoBuilder_ == null) {
        streamingResponse_ = builderForValue.build();
        onChanged();
      } else {
        infoBuilder_.setMessage(builderForValue.build());
      }
      streamingResponseCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Provides information about the requested file.
     * </pre>
     *
     * <code>.sensory.api.v1.file.FileInfo info = 1;</code>
     */
    public Builder mergeInfo(ai.sensorycloud.api.v1.file.FileInfo value) {
      if (infoBuilder_ == null) {
        if (streamingResponseCase_ == 1 &&
            streamingResponse_ != ai.sensorycloud.api.v1.file.FileInfo.getDefaultInstance()) {
          streamingResponse_ = ai.sensorycloud.api.v1.file.FileInfo.newBuilder((ai.sensorycloud.api.v1.file.FileInfo) streamingResponse_)
              .mergeFrom(value).buildPartial();
        } else {
          streamingResponse_ = value;
        }
        onChanged();
      } else {
        if (streamingResponseCase_ == 1) {
          infoBuilder_.mergeFrom(value);
        } else {
          infoBuilder_.setMessage(value);
        }
      }
      streamingResponseCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Provides information about the requested file.
     * </pre>
     *
     * <code>.sensory.api.v1.file.FileInfo info = 1;</code>
     */
    public Builder clearInfo() {
      if (infoBuilder_ == null) {
        if (streamingResponseCase_ == 1) {
          streamingResponseCase_ = 0;
          streamingResponse_ = null;
          onChanged();
        }
      } else {
        if (streamingResponseCase_ == 1) {
          streamingResponseCase_ = 0;
          streamingResponse_ = null;
        }
        infoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Provides information about the requested file.
     * </pre>
     *
     * <code>.sensory.api.v1.file.FileInfo info = 1;</code>
     */
    public ai.sensorycloud.api.v1.file.FileInfo.Builder getInfoBuilder() {
      return getInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Provides information about the requested file.
     * </pre>
     *
     * <code>.sensory.api.v1.file.FileInfo info = 1;</code>
     */
    @java.lang.Override
    public ai.sensorycloud.api.v1.file.FileInfoOrBuilder getInfoOrBuilder() {
      if ((streamingResponseCase_ == 1) && (infoBuilder_ != null)) {
        return infoBuilder_.getMessageOrBuilder();
      } else {
        if (streamingResponseCase_ == 1) {
          return (ai.sensorycloud.api.v1.file.FileInfo) streamingResponse_;
        }
        return ai.sensorycloud.api.v1.file.FileInfo.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Provides information about the requested file.
     * </pre>
     *
     * <code>.sensory.api.v1.file.FileInfo info = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.sensorycloud.api.v1.file.FileInfo, ai.sensorycloud.api.v1.file.FileInfo.Builder, ai.sensorycloud.api.v1.file.FileInfoOrBuilder> 
        getInfoFieldBuilder() {
      if (infoBuilder_ == null) {
        if (!(streamingResponseCase_ == 1)) {
          streamingResponse_ = ai.sensorycloud.api.v1.file.FileInfo.getDefaultInstance();
        }
        infoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.sensorycloud.api.v1.file.FileInfo, ai.sensorycloud.api.v1.file.FileInfo.Builder, ai.sensorycloud.api.v1.file.FileInfoOrBuilder>(
                (ai.sensorycloud.api.v1.file.FileInfo) streamingResponse_,
                getParentForChildren(),
                isClean());
        streamingResponse_ = null;
      }
      streamingResponseCase_ = 1;
      onChanged();
      return infoBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.sensorycloud.api.v1.file.FileChunk, ai.sensorycloud.api.v1.file.FileChunk.Builder, ai.sensorycloud.api.v1.file.FileChunkOrBuilder> chunkBuilder_;
    /**
     * <pre>
     * A chunk of the downloaded file
     * </pre>
     *
     * <code>.sensory.api.v1.file.FileChunk chunk = 2;</code>
     * @return Whether the chunk field is set.
     */
    @java.lang.Override
    public boolean hasChunk() {
      return streamingResponseCase_ == 2;
    }
    /**
     * <pre>
     * A chunk of the downloaded file
     * </pre>
     *
     * <code>.sensory.api.v1.file.FileChunk chunk = 2;</code>
     * @return The chunk.
     */
    @java.lang.Override
    public ai.sensorycloud.api.v1.file.FileChunk getChunk() {
      if (chunkBuilder_ == null) {
        if (streamingResponseCase_ == 2) {
          return (ai.sensorycloud.api.v1.file.FileChunk) streamingResponse_;
        }
        return ai.sensorycloud.api.v1.file.FileChunk.getDefaultInstance();
      } else {
        if (streamingResponseCase_ == 2) {
          return chunkBuilder_.getMessage();
        }
        return ai.sensorycloud.api.v1.file.FileChunk.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A chunk of the downloaded file
     * </pre>
     *
     * <code>.sensory.api.v1.file.FileChunk chunk = 2;</code>
     */
    public Builder setChunk(ai.sensorycloud.api.v1.file.FileChunk value) {
      if (chunkBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        streamingResponse_ = value;
        onChanged();
      } else {
        chunkBuilder_.setMessage(value);
      }
      streamingResponseCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * A chunk of the downloaded file
     * </pre>
     *
     * <code>.sensory.api.v1.file.FileChunk chunk = 2;</code>
     */
    public Builder setChunk(
        ai.sensorycloud.api.v1.file.FileChunk.Builder builderForValue) {
      if (chunkBuilder_ == null) {
        streamingResponse_ = builderForValue.build();
        onChanged();
      } else {
        chunkBuilder_.setMessage(builderForValue.build());
      }
      streamingResponseCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * A chunk of the downloaded file
     * </pre>
     *
     * <code>.sensory.api.v1.file.FileChunk chunk = 2;</code>
     */
    public Builder mergeChunk(ai.sensorycloud.api.v1.file.FileChunk value) {
      if (chunkBuilder_ == null) {
        if (streamingResponseCase_ == 2 &&
            streamingResponse_ != ai.sensorycloud.api.v1.file.FileChunk.getDefaultInstance()) {
          streamingResponse_ = ai.sensorycloud.api.v1.file.FileChunk.newBuilder((ai.sensorycloud.api.v1.file.FileChunk) streamingResponse_)
              .mergeFrom(value).buildPartial();
        } else {
          streamingResponse_ = value;
        }
        onChanged();
      } else {
        if (streamingResponseCase_ == 2) {
          chunkBuilder_.mergeFrom(value);
        } else {
          chunkBuilder_.setMessage(value);
        }
      }
      streamingResponseCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * A chunk of the downloaded file
     * </pre>
     *
     * <code>.sensory.api.v1.file.FileChunk chunk = 2;</code>
     */
    public Builder clearChunk() {
      if (chunkBuilder_ == null) {
        if (streamingResponseCase_ == 2) {
          streamingResponseCase_ = 0;
          streamingResponse_ = null;
          onChanged();
        }
      } else {
        if (streamingResponseCase_ == 2) {
          streamingResponseCase_ = 0;
          streamingResponse_ = null;
        }
        chunkBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A chunk of the downloaded file
     * </pre>
     *
     * <code>.sensory.api.v1.file.FileChunk chunk = 2;</code>
     */
    public ai.sensorycloud.api.v1.file.FileChunk.Builder getChunkBuilder() {
      return getChunkFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A chunk of the downloaded file
     * </pre>
     *
     * <code>.sensory.api.v1.file.FileChunk chunk = 2;</code>
     */
    @java.lang.Override
    public ai.sensorycloud.api.v1.file.FileChunkOrBuilder getChunkOrBuilder() {
      if ((streamingResponseCase_ == 2) && (chunkBuilder_ != null)) {
        return chunkBuilder_.getMessageOrBuilder();
      } else {
        if (streamingResponseCase_ == 2) {
          return (ai.sensorycloud.api.v1.file.FileChunk) streamingResponse_;
        }
        return ai.sensorycloud.api.v1.file.FileChunk.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A chunk of the downloaded file
     * </pre>
     *
     * <code>.sensory.api.v1.file.FileChunk chunk = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.sensorycloud.api.v1.file.FileChunk, ai.sensorycloud.api.v1.file.FileChunk.Builder, ai.sensorycloud.api.v1.file.FileChunkOrBuilder> 
        getChunkFieldBuilder() {
      if (chunkBuilder_ == null) {
        if (!(streamingResponseCase_ == 2)) {
          streamingResponse_ = ai.sensorycloud.api.v1.file.FileChunk.getDefaultInstance();
        }
        chunkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.sensorycloud.api.v1.file.FileChunk, ai.sensorycloud.api.v1.file.FileChunk.Builder, ai.sensorycloud.api.v1.file.FileChunkOrBuilder>(
                (ai.sensorycloud.api.v1.file.FileChunk) streamingResponse_,
                getParentForChildren(),
                isClean());
        streamingResponse_ = null;
      }
      streamingResponseCase_ = 2;
      onChanged();
      return chunkBuilder_;
    }

    private boolean complete_ ;
    /**
     * <pre>
     * File download complete flag
     * </pre>
     *
     * <code>bool complete = 3;</code>
     * @return The complete.
     */
    @java.lang.Override
    public boolean getComplete() {
      return complete_;
    }
    /**
     * <pre>
     * File download complete flag
     * </pre>
     *
     * <code>bool complete = 3;</code>
     * @param value The complete to set.
     * @return This builder for chaining.
     */
    public Builder setComplete(boolean value) {

      complete_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * File download complete flag
     * </pre>
     *
     * <code>bool complete = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearComplete() {
      bitField0_ = (bitField0_ & ~0x00000004);
      complete_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:sensory.api.v1.file.FileResponse)
  }

  // @@protoc_insertion_point(class_scope:sensory.api.v1.file.FileResponse)
  private static final ai.sensorycloud.api.v1.file.FileResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ai.sensorycloud.api.v1.file.FileResponse();
  }

  public static ai.sensorycloud.api.v1.file.FileResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FileResponse>
      PARSER = new com.google.protobuf.AbstractParser<FileResponse>() {
    @java.lang.Override
    public FileResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<FileResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FileResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ai.sensorycloud.api.v1.file.FileResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

