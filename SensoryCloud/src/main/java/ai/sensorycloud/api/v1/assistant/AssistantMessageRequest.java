// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1/assistant/assistant.proto

package ai.sensorycloud.api.v1.assistant;

/**
 * <pre>
 * Request to process a message with a virutal assistant
 * </pre>
 *
 * Protobuf type {@code sensory.api.v1.assistant.AssistantMessageRequest}
 */
public final class AssistantMessageRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:sensory.api.v1.assistant.AssistantMessageRequest)
    AssistantMessageRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AssistantMessageRequest.newBuilder() to construct.
  private AssistantMessageRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AssistantMessageRequest() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AssistantMessageRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AssistantMessageRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            ai.sensorycloud.api.v1.assistant.AssistantMessageConfig.Builder subBuilder = null;
            if (streamingRequestCase_ == 1) {
              subBuilder = ((ai.sensorycloud.api.v1.assistant.AssistantMessageConfig) streamingRequest_).toBuilder();
            }
            streamingRequest_ =
                input.readMessage(ai.sensorycloud.api.v1.assistant.AssistantMessageConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((ai.sensorycloud.api.v1.assistant.AssistantMessageConfig) streamingRequest_);
              streamingRequest_ = subBuilder.buildPartial();
            }
            streamingRequestCase_ = 1;
            break;
          }
          case 18: {
            ai.sensorycloud.api.v1.assistant.AssistantMessage.Builder subBuilder = null;
            if (streamingRequestCase_ == 2) {
              subBuilder = ((ai.sensorycloud.api.v1.assistant.AssistantMessage) streamingRequest_).toBuilder();
            }
            streamingRequest_ =
                input.readMessage(ai.sensorycloud.api.v1.assistant.AssistantMessage.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((ai.sensorycloud.api.v1.assistant.AssistantMessage) streamingRequest_);
              streamingRequest_ = subBuilder.buildPartial();
            }
            streamingRequestCase_ = 2;
            break;
          }
          case 82: {
            ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest.Builder subBuilder = null;
            if (postProcessingAction_ != null) {
              subBuilder = postProcessingAction_.toBuilder();
            }
            postProcessingAction_ = input.readMessage(ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(postProcessingAction_);
              postProcessingAction_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.sensorycloud.api.v1.assistant.SensoryApiV1AssistantProto.internal_static_sensory_api_v1_assistant_AssistantMessageRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.sensorycloud.api.v1.assistant.SensoryApiV1AssistantProto.internal_static_sensory_api_v1_assistant_AssistantMessageRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.sensorycloud.api.v1.assistant.AssistantMessageRequest.class, ai.sensorycloud.api.v1.assistant.AssistantMessageRequest.Builder.class);
  }

  private int streamingRequestCase_ = 0;
  private java.lang.Object streamingRequest_;
  public enum StreamingRequestCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    CONFIG(1),
    MESSAGE(2),
    STREAMINGREQUEST_NOT_SET(0);
    private final int value;
    private StreamingRequestCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static StreamingRequestCase valueOf(int value) {
      return forNumber(value);
    }

    public static StreamingRequestCase forNumber(int value) {
      switch (value) {
        case 1: return CONFIG;
        case 2: return MESSAGE;
        case 0: return STREAMINGREQUEST_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public StreamingRequestCase
  getStreamingRequestCase() {
    return StreamingRequestCase.forNumber(
        streamingRequestCase_);
  }

  public static final int CONFIG_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Provides information that specifies how to process the
   * request. The first `CreateEnrollmentRequest` message must contain a
   * `config`  message.
   * </pre>
   *
   * <code>.sensory.api.v1.assistant.AssistantMessageConfig config = 1;</code>
   * @return Whether the config field is set.
   */
  @java.lang.Override
  public boolean hasConfig() {
    return streamingRequestCase_ == 1;
  }
  /**
   * <pre>
   * Provides information that specifies how to process the
   * request. The first `CreateEnrollmentRequest` message must contain a
   * `config`  message.
   * </pre>
   *
   * <code>.sensory.api.v1.assistant.AssistantMessageConfig config = 1;</code>
   * @return The config.
   */
  @java.lang.Override
  public ai.sensorycloud.api.v1.assistant.AssistantMessageConfig getConfig() {
    if (streamingRequestCase_ == 1) {
       return (ai.sensorycloud.api.v1.assistant.AssistantMessageConfig) streamingRequest_;
    }
    return ai.sensorycloud.api.v1.assistant.AssistantMessageConfig.getDefaultInstance();
  }
  /**
   * <pre>
   * Provides information that specifies how to process the
   * request. The first `CreateEnrollmentRequest` message must contain a
   * `config`  message.
   * </pre>
   *
   * <code>.sensory.api.v1.assistant.AssistantMessageConfig config = 1;</code>
   */
  @java.lang.Override
  public ai.sensorycloud.api.v1.assistant.AssistantMessageConfigOrBuilder getConfigOrBuilder() {
    if (streamingRequestCase_ == 1) {
       return (ai.sensorycloud.api.v1.assistant.AssistantMessageConfig) streamingRequest_;
    }
    return ai.sensorycloud.api.v1.assistant.AssistantMessageConfig.getDefaultInstance();
  }

  public static final int MESSAGE_FIELD_NUMBER = 2;
  /**
   * <pre>
   * The data to be recognized. Sequential chunks of data are sent
   * in sequential `AssistantMessageRequest` messages. The first
   * `AssistantMessageRequest` message must not contain `config` data
   * and all subsequent `AssistantMessageRequest` messages must contain
   * `message` data.
   * </pre>
   *
   * <code>.sensory.api.v1.assistant.AssistantMessage message = 2;</code>
   * @return Whether the message field is set.
   */
  @java.lang.Override
  public boolean hasMessage() {
    return streamingRequestCase_ == 2;
  }
  /**
   * <pre>
   * The data to be recognized. Sequential chunks of data are sent
   * in sequential `AssistantMessageRequest` messages. The first
   * `AssistantMessageRequest` message must not contain `config` data
   * and all subsequent `AssistantMessageRequest` messages must contain
   * `message` data.
   * </pre>
   *
   * <code>.sensory.api.v1.assistant.AssistantMessage message = 2;</code>
   * @return The message.
   */
  @java.lang.Override
  public ai.sensorycloud.api.v1.assistant.AssistantMessage getMessage() {
    if (streamingRequestCase_ == 2) {
       return (ai.sensorycloud.api.v1.assistant.AssistantMessage) streamingRequest_;
    }
    return ai.sensorycloud.api.v1.assistant.AssistantMessage.getDefaultInstance();
  }
  /**
   * <pre>
   * The data to be recognized. Sequential chunks of data are sent
   * in sequential `AssistantMessageRequest` messages. The first
   * `AssistantMessageRequest` message must not contain `config` data
   * and all subsequent `AssistantMessageRequest` messages must contain
   * `message` data.
   * </pre>
   *
   * <code>.sensory.api.v1.assistant.AssistantMessage message = 2;</code>
   */
  @java.lang.Override
  public ai.sensorycloud.api.v1.assistant.AssistantMessageOrBuilder getMessageOrBuilder() {
    if (streamingRequestCase_ == 2) {
       return (ai.sensorycloud.api.v1.assistant.AssistantMessage) streamingRequest_;
    }
    return ai.sensorycloud.api.v1.assistant.AssistantMessage.getDefaultInstance();
  }

  public static final int POSTPROCESSINGACTION_FIELD_NUMBER = 10;
  private ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest postProcessingAction_;
  /**
   * <pre>
   * Message used to instruct the assistant engine to process audio data.
   * </pre>
   *
   * <code>.sensory.api.v1.assistant.AssistantPostProcessingActionRequest postProcessingAction = 10;</code>
   * @return Whether the postProcessingAction field is set.
   */
  @java.lang.Override
  public boolean hasPostProcessingAction() {
    return postProcessingAction_ != null;
  }
  /**
   * <pre>
   * Message used to instruct the assistant engine to process audio data.
   * </pre>
   *
   * <code>.sensory.api.v1.assistant.AssistantPostProcessingActionRequest postProcessingAction = 10;</code>
   * @return The postProcessingAction.
   */
  @java.lang.Override
  public ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest getPostProcessingAction() {
    return postProcessingAction_ == null ? ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest.getDefaultInstance() : postProcessingAction_;
  }
  /**
   * <pre>
   * Message used to instruct the assistant engine to process audio data.
   * </pre>
   *
   * <code>.sensory.api.v1.assistant.AssistantPostProcessingActionRequest postProcessingAction = 10;</code>
   */
  @java.lang.Override
  public ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequestOrBuilder getPostProcessingActionOrBuilder() {
    return getPostProcessingAction();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (streamingRequestCase_ == 1) {
      output.writeMessage(1, (ai.sensorycloud.api.v1.assistant.AssistantMessageConfig) streamingRequest_);
    }
    if (streamingRequestCase_ == 2) {
      output.writeMessage(2, (ai.sensorycloud.api.v1.assistant.AssistantMessage) streamingRequest_);
    }
    if (postProcessingAction_ != null) {
      output.writeMessage(10, getPostProcessingAction());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (streamingRequestCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (ai.sensorycloud.api.v1.assistant.AssistantMessageConfig) streamingRequest_);
    }
    if (streamingRequestCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (ai.sensorycloud.api.v1.assistant.AssistantMessage) streamingRequest_);
    }
    if (postProcessingAction_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getPostProcessingAction());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ai.sensorycloud.api.v1.assistant.AssistantMessageRequest)) {
      return super.equals(obj);
    }
    ai.sensorycloud.api.v1.assistant.AssistantMessageRequest other = (ai.sensorycloud.api.v1.assistant.AssistantMessageRequest) obj;

    if (hasPostProcessingAction() != other.hasPostProcessingAction()) return false;
    if (hasPostProcessingAction()) {
      if (!getPostProcessingAction()
          .equals(other.getPostProcessingAction())) return false;
    }
    if (!getStreamingRequestCase().equals(other.getStreamingRequestCase())) return false;
    switch (streamingRequestCase_) {
      case 1:
        if (!getConfig()
            .equals(other.getConfig())) return false;
        break;
      case 2:
        if (!getMessage()
            .equals(other.getMessage())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasPostProcessingAction()) {
      hash = (37 * hash) + POSTPROCESSINGACTION_FIELD_NUMBER;
      hash = (53 * hash) + getPostProcessingAction().hashCode();
    }
    switch (streamingRequestCase_) {
      case 1:
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfig().hashCode();
        break;
      case 2:
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessage().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ai.sensorycloud.api.v1.assistant.AssistantMessageRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.sensorycloud.api.v1.assistant.AssistantMessageRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.sensorycloud.api.v1.assistant.AssistantMessageRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.sensorycloud.api.v1.assistant.AssistantMessageRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.sensorycloud.api.v1.assistant.AssistantMessageRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.sensorycloud.api.v1.assistant.AssistantMessageRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.sensorycloud.api.v1.assistant.AssistantMessageRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.sensorycloud.api.v1.assistant.AssistantMessageRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.sensorycloud.api.v1.assistant.AssistantMessageRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static ai.sensorycloud.api.v1.assistant.AssistantMessageRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.sensorycloud.api.v1.assistant.AssistantMessageRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.sensorycloud.api.v1.assistant.AssistantMessageRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ai.sensorycloud.api.v1.assistant.AssistantMessageRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Request to process a message with a virutal assistant
   * </pre>
   *
   * Protobuf type {@code sensory.api.v1.assistant.AssistantMessageRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:sensory.api.v1.assistant.AssistantMessageRequest)
      ai.sensorycloud.api.v1.assistant.AssistantMessageRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.sensorycloud.api.v1.assistant.SensoryApiV1AssistantProto.internal_static_sensory_api_v1_assistant_AssistantMessageRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.sensorycloud.api.v1.assistant.SensoryApiV1AssistantProto.internal_static_sensory_api_v1_assistant_AssistantMessageRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.sensorycloud.api.v1.assistant.AssistantMessageRequest.class, ai.sensorycloud.api.v1.assistant.AssistantMessageRequest.Builder.class);
    }

    // Construct using ai.sensorycloud.api.v1.assistant.AssistantMessageRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (postProcessingActionBuilder_ == null) {
        postProcessingAction_ = null;
      } else {
        postProcessingAction_ = null;
        postProcessingActionBuilder_ = null;
      }
      streamingRequestCase_ = 0;
      streamingRequest_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.sensorycloud.api.v1.assistant.SensoryApiV1AssistantProto.internal_static_sensory_api_v1_assistant_AssistantMessageRequest_descriptor;
    }

    @java.lang.Override
    public ai.sensorycloud.api.v1.assistant.AssistantMessageRequest getDefaultInstanceForType() {
      return ai.sensorycloud.api.v1.assistant.AssistantMessageRequest.getDefaultInstance();
    }

    @java.lang.Override
    public ai.sensorycloud.api.v1.assistant.AssistantMessageRequest build() {
      ai.sensorycloud.api.v1.assistant.AssistantMessageRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ai.sensorycloud.api.v1.assistant.AssistantMessageRequest buildPartial() {
      ai.sensorycloud.api.v1.assistant.AssistantMessageRequest result = new ai.sensorycloud.api.v1.assistant.AssistantMessageRequest(this);
      if (streamingRequestCase_ == 1) {
        if (configBuilder_ == null) {
          result.streamingRequest_ = streamingRequest_;
        } else {
          result.streamingRequest_ = configBuilder_.build();
        }
      }
      if (streamingRequestCase_ == 2) {
        if (messageBuilder_ == null) {
          result.streamingRequest_ = streamingRequest_;
        } else {
          result.streamingRequest_ = messageBuilder_.build();
        }
      }
      if (postProcessingActionBuilder_ == null) {
        result.postProcessingAction_ = postProcessingAction_;
      } else {
        result.postProcessingAction_ = postProcessingActionBuilder_.build();
      }
      result.streamingRequestCase_ = streamingRequestCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.sensorycloud.api.v1.assistant.AssistantMessageRequest) {
        return mergeFrom((ai.sensorycloud.api.v1.assistant.AssistantMessageRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.sensorycloud.api.v1.assistant.AssistantMessageRequest other) {
      if (other == ai.sensorycloud.api.v1.assistant.AssistantMessageRequest.getDefaultInstance()) return this;
      if (other.hasPostProcessingAction()) {
        mergePostProcessingAction(other.getPostProcessingAction());
      }
      switch (other.getStreamingRequestCase()) {
        case CONFIG: {
          mergeConfig(other.getConfig());
          break;
        }
        case MESSAGE: {
          mergeMessage(other.getMessage());
          break;
        }
        case STREAMINGREQUEST_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      ai.sensorycloud.api.v1.assistant.AssistantMessageRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (ai.sensorycloud.api.v1.assistant.AssistantMessageRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int streamingRequestCase_ = 0;
    private java.lang.Object streamingRequest_;
    public StreamingRequestCase
        getStreamingRequestCase() {
      return StreamingRequestCase.forNumber(
          streamingRequestCase_);
    }

    public Builder clearStreamingRequest() {
      streamingRequestCase_ = 0;
      streamingRequest_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        ai.sensorycloud.api.v1.assistant.AssistantMessageConfig, ai.sensorycloud.api.v1.assistant.AssistantMessageConfig.Builder, ai.sensorycloud.api.v1.assistant.AssistantMessageConfigOrBuilder> configBuilder_;
    /**
     * <pre>
     * Provides information that specifies how to process the
     * request. The first `CreateEnrollmentRequest` message must contain a
     * `config`  message.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantMessageConfig config = 1;</code>
     * @return Whether the config field is set.
     */
    @java.lang.Override
    public boolean hasConfig() {
      return streamingRequestCase_ == 1;
    }
    /**
     * <pre>
     * Provides information that specifies how to process the
     * request. The first `CreateEnrollmentRequest` message must contain a
     * `config`  message.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantMessageConfig config = 1;</code>
     * @return The config.
     */
    @java.lang.Override
    public ai.sensorycloud.api.v1.assistant.AssistantMessageConfig getConfig() {
      if (configBuilder_ == null) {
        if (streamingRequestCase_ == 1) {
          return (ai.sensorycloud.api.v1.assistant.AssistantMessageConfig) streamingRequest_;
        }
        return ai.sensorycloud.api.v1.assistant.AssistantMessageConfig.getDefaultInstance();
      } else {
        if (streamingRequestCase_ == 1) {
          return configBuilder_.getMessage();
        }
        return ai.sensorycloud.api.v1.assistant.AssistantMessageConfig.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Provides information that specifies how to process the
     * request. The first `CreateEnrollmentRequest` message must contain a
     * `config`  message.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantMessageConfig config = 1;</code>
     */
    public Builder setConfig(ai.sensorycloud.api.v1.assistant.AssistantMessageConfig value) {
      if (configBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        streamingRequest_ = value;
        onChanged();
      } else {
        configBuilder_.setMessage(value);
      }
      streamingRequestCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Provides information that specifies how to process the
     * request. The first `CreateEnrollmentRequest` message must contain a
     * `config`  message.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantMessageConfig config = 1;</code>
     */
    public Builder setConfig(
        ai.sensorycloud.api.v1.assistant.AssistantMessageConfig.Builder builderForValue) {
      if (configBuilder_ == null) {
        streamingRequest_ = builderForValue.build();
        onChanged();
      } else {
        configBuilder_.setMessage(builderForValue.build());
      }
      streamingRequestCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Provides information that specifies how to process the
     * request. The first `CreateEnrollmentRequest` message must contain a
     * `config`  message.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantMessageConfig config = 1;</code>
     */
    public Builder mergeConfig(ai.sensorycloud.api.v1.assistant.AssistantMessageConfig value) {
      if (configBuilder_ == null) {
        if (streamingRequestCase_ == 1 &&
            streamingRequest_ != ai.sensorycloud.api.v1.assistant.AssistantMessageConfig.getDefaultInstance()) {
          streamingRequest_ = ai.sensorycloud.api.v1.assistant.AssistantMessageConfig.newBuilder((ai.sensorycloud.api.v1.assistant.AssistantMessageConfig) streamingRequest_)
              .mergeFrom(value).buildPartial();
        } else {
          streamingRequest_ = value;
        }
        onChanged();
      } else {
        if (streamingRequestCase_ == 1) {
          configBuilder_.mergeFrom(value);
        } else {
          configBuilder_.setMessage(value);
        }
      }
      streamingRequestCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Provides information that specifies how to process the
     * request. The first `CreateEnrollmentRequest` message must contain a
     * `config`  message.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantMessageConfig config = 1;</code>
     */
    public Builder clearConfig() {
      if (configBuilder_ == null) {
        if (streamingRequestCase_ == 1) {
          streamingRequestCase_ = 0;
          streamingRequest_ = null;
          onChanged();
        }
      } else {
        if (streamingRequestCase_ == 1) {
          streamingRequestCase_ = 0;
          streamingRequest_ = null;
        }
        configBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Provides information that specifies how to process the
     * request. The first `CreateEnrollmentRequest` message must contain a
     * `config`  message.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantMessageConfig config = 1;</code>
     */
    public ai.sensorycloud.api.v1.assistant.AssistantMessageConfig.Builder getConfigBuilder() {
      return getConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Provides information that specifies how to process the
     * request. The first `CreateEnrollmentRequest` message must contain a
     * `config`  message.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantMessageConfig config = 1;</code>
     */
    @java.lang.Override
    public ai.sensorycloud.api.v1.assistant.AssistantMessageConfigOrBuilder getConfigOrBuilder() {
      if ((streamingRequestCase_ == 1) && (configBuilder_ != null)) {
        return configBuilder_.getMessageOrBuilder();
      } else {
        if (streamingRequestCase_ == 1) {
          return (ai.sensorycloud.api.v1.assistant.AssistantMessageConfig) streamingRequest_;
        }
        return ai.sensorycloud.api.v1.assistant.AssistantMessageConfig.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Provides information that specifies how to process the
     * request. The first `CreateEnrollmentRequest` message must contain a
     * `config`  message.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantMessageConfig config = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.sensorycloud.api.v1.assistant.AssistantMessageConfig, ai.sensorycloud.api.v1.assistant.AssistantMessageConfig.Builder, ai.sensorycloud.api.v1.assistant.AssistantMessageConfigOrBuilder> 
        getConfigFieldBuilder() {
      if (configBuilder_ == null) {
        if (!(streamingRequestCase_ == 1)) {
          streamingRequest_ = ai.sensorycloud.api.v1.assistant.AssistantMessageConfig.getDefaultInstance();
        }
        configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.sensorycloud.api.v1.assistant.AssistantMessageConfig, ai.sensorycloud.api.v1.assistant.AssistantMessageConfig.Builder, ai.sensorycloud.api.v1.assistant.AssistantMessageConfigOrBuilder>(
                (ai.sensorycloud.api.v1.assistant.AssistantMessageConfig) streamingRequest_,
                getParentForChildren(),
                isClean());
        streamingRequest_ = null;
      }
      streamingRequestCase_ = 1;
      onChanged();;
      return configBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.sensorycloud.api.v1.assistant.AssistantMessage, ai.sensorycloud.api.v1.assistant.AssistantMessage.Builder, ai.sensorycloud.api.v1.assistant.AssistantMessageOrBuilder> messageBuilder_;
    /**
     * <pre>
     * The data to be recognized. Sequential chunks of data are sent
     * in sequential `AssistantMessageRequest` messages. The first
     * `AssistantMessageRequest` message must not contain `config` data
     * and all subsequent `AssistantMessageRequest` messages must contain
     * `message` data.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantMessage message = 2;</code>
     * @return Whether the message field is set.
     */
    @java.lang.Override
    public boolean hasMessage() {
      return streamingRequestCase_ == 2;
    }
    /**
     * <pre>
     * The data to be recognized. Sequential chunks of data are sent
     * in sequential `AssistantMessageRequest` messages. The first
     * `AssistantMessageRequest` message must not contain `config` data
     * and all subsequent `AssistantMessageRequest` messages must contain
     * `message` data.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantMessage message = 2;</code>
     * @return The message.
     */
    @java.lang.Override
    public ai.sensorycloud.api.v1.assistant.AssistantMessage getMessage() {
      if (messageBuilder_ == null) {
        if (streamingRequestCase_ == 2) {
          return (ai.sensorycloud.api.v1.assistant.AssistantMessage) streamingRequest_;
        }
        return ai.sensorycloud.api.v1.assistant.AssistantMessage.getDefaultInstance();
      } else {
        if (streamingRequestCase_ == 2) {
          return messageBuilder_.getMessage();
        }
        return ai.sensorycloud.api.v1.assistant.AssistantMessage.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The data to be recognized. Sequential chunks of data are sent
     * in sequential `AssistantMessageRequest` messages. The first
     * `AssistantMessageRequest` message must not contain `config` data
     * and all subsequent `AssistantMessageRequest` messages must contain
     * `message` data.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantMessage message = 2;</code>
     */
    public Builder setMessage(ai.sensorycloud.api.v1.assistant.AssistantMessage value) {
      if (messageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        streamingRequest_ = value;
        onChanged();
      } else {
        messageBuilder_.setMessage(value);
      }
      streamingRequestCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * The data to be recognized. Sequential chunks of data are sent
     * in sequential `AssistantMessageRequest` messages. The first
     * `AssistantMessageRequest` message must not contain `config` data
     * and all subsequent `AssistantMessageRequest` messages must contain
     * `message` data.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantMessage message = 2;</code>
     */
    public Builder setMessage(
        ai.sensorycloud.api.v1.assistant.AssistantMessage.Builder builderForValue) {
      if (messageBuilder_ == null) {
        streamingRequest_ = builderForValue.build();
        onChanged();
      } else {
        messageBuilder_.setMessage(builderForValue.build());
      }
      streamingRequestCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * The data to be recognized. Sequential chunks of data are sent
     * in sequential `AssistantMessageRequest` messages. The first
     * `AssistantMessageRequest` message must not contain `config` data
     * and all subsequent `AssistantMessageRequest` messages must contain
     * `message` data.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantMessage message = 2;</code>
     */
    public Builder mergeMessage(ai.sensorycloud.api.v1.assistant.AssistantMessage value) {
      if (messageBuilder_ == null) {
        if (streamingRequestCase_ == 2 &&
            streamingRequest_ != ai.sensorycloud.api.v1.assistant.AssistantMessage.getDefaultInstance()) {
          streamingRequest_ = ai.sensorycloud.api.v1.assistant.AssistantMessage.newBuilder((ai.sensorycloud.api.v1.assistant.AssistantMessage) streamingRequest_)
              .mergeFrom(value).buildPartial();
        } else {
          streamingRequest_ = value;
        }
        onChanged();
      } else {
        if (streamingRequestCase_ == 2) {
          messageBuilder_.mergeFrom(value);
        } else {
          messageBuilder_.setMessage(value);
        }
      }
      streamingRequestCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * The data to be recognized. Sequential chunks of data are sent
     * in sequential `AssistantMessageRequest` messages. The first
     * `AssistantMessageRequest` message must not contain `config` data
     * and all subsequent `AssistantMessageRequest` messages must contain
     * `message` data.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantMessage message = 2;</code>
     */
    public Builder clearMessage() {
      if (messageBuilder_ == null) {
        if (streamingRequestCase_ == 2) {
          streamingRequestCase_ = 0;
          streamingRequest_ = null;
          onChanged();
        }
      } else {
        if (streamingRequestCase_ == 2) {
          streamingRequestCase_ = 0;
          streamingRequest_ = null;
        }
        messageBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The data to be recognized. Sequential chunks of data are sent
     * in sequential `AssistantMessageRequest` messages. The first
     * `AssistantMessageRequest` message must not contain `config` data
     * and all subsequent `AssistantMessageRequest` messages must contain
     * `message` data.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantMessage message = 2;</code>
     */
    public ai.sensorycloud.api.v1.assistant.AssistantMessage.Builder getMessageBuilder() {
      return getMessageFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The data to be recognized. Sequential chunks of data are sent
     * in sequential `AssistantMessageRequest` messages. The first
     * `AssistantMessageRequest` message must not contain `config` data
     * and all subsequent `AssistantMessageRequest` messages must contain
     * `message` data.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantMessage message = 2;</code>
     */
    @java.lang.Override
    public ai.sensorycloud.api.v1.assistant.AssistantMessageOrBuilder getMessageOrBuilder() {
      if ((streamingRequestCase_ == 2) && (messageBuilder_ != null)) {
        return messageBuilder_.getMessageOrBuilder();
      } else {
        if (streamingRequestCase_ == 2) {
          return (ai.sensorycloud.api.v1.assistant.AssistantMessage) streamingRequest_;
        }
        return ai.sensorycloud.api.v1.assistant.AssistantMessage.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The data to be recognized. Sequential chunks of data are sent
     * in sequential `AssistantMessageRequest` messages. The first
     * `AssistantMessageRequest` message must not contain `config` data
     * and all subsequent `AssistantMessageRequest` messages must contain
     * `message` data.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantMessage message = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.sensorycloud.api.v1.assistant.AssistantMessage, ai.sensorycloud.api.v1.assistant.AssistantMessage.Builder, ai.sensorycloud.api.v1.assistant.AssistantMessageOrBuilder> 
        getMessageFieldBuilder() {
      if (messageBuilder_ == null) {
        if (!(streamingRequestCase_ == 2)) {
          streamingRequest_ = ai.sensorycloud.api.v1.assistant.AssistantMessage.getDefaultInstance();
        }
        messageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.sensorycloud.api.v1.assistant.AssistantMessage, ai.sensorycloud.api.v1.assistant.AssistantMessage.Builder, ai.sensorycloud.api.v1.assistant.AssistantMessageOrBuilder>(
                (ai.sensorycloud.api.v1.assistant.AssistantMessage) streamingRequest_,
                getParentForChildren(),
                isClean());
        streamingRequest_ = null;
      }
      streamingRequestCase_ = 2;
      onChanged();;
      return messageBuilder_;
    }

    private ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest postProcessingAction_;
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest, ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest.Builder, ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequestOrBuilder> postProcessingActionBuilder_;
    /**
     * <pre>
     * Message used to instruct the assistant engine to process audio data.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantPostProcessingActionRequest postProcessingAction = 10;</code>
     * @return Whether the postProcessingAction field is set.
     */
    public boolean hasPostProcessingAction() {
      return postProcessingActionBuilder_ != null || postProcessingAction_ != null;
    }
    /**
     * <pre>
     * Message used to instruct the assistant engine to process audio data.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantPostProcessingActionRequest postProcessingAction = 10;</code>
     * @return The postProcessingAction.
     */
    public ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest getPostProcessingAction() {
      if (postProcessingActionBuilder_ == null) {
        return postProcessingAction_ == null ? ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest.getDefaultInstance() : postProcessingAction_;
      } else {
        return postProcessingActionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Message used to instruct the assistant engine to process audio data.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantPostProcessingActionRequest postProcessingAction = 10;</code>
     */
    public Builder setPostProcessingAction(ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest value) {
      if (postProcessingActionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        postProcessingAction_ = value;
        onChanged();
      } else {
        postProcessingActionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Message used to instruct the assistant engine to process audio data.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantPostProcessingActionRequest postProcessingAction = 10;</code>
     */
    public Builder setPostProcessingAction(
        ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest.Builder builderForValue) {
      if (postProcessingActionBuilder_ == null) {
        postProcessingAction_ = builderForValue.build();
        onChanged();
      } else {
        postProcessingActionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Message used to instruct the assistant engine to process audio data.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantPostProcessingActionRequest postProcessingAction = 10;</code>
     */
    public Builder mergePostProcessingAction(ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest value) {
      if (postProcessingActionBuilder_ == null) {
        if (postProcessingAction_ != null) {
          postProcessingAction_ =
            ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest.newBuilder(postProcessingAction_).mergeFrom(value).buildPartial();
        } else {
          postProcessingAction_ = value;
        }
        onChanged();
      } else {
        postProcessingActionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Message used to instruct the assistant engine to process audio data.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantPostProcessingActionRequest postProcessingAction = 10;</code>
     */
    public Builder clearPostProcessingAction() {
      if (postProcessingActionBuilder_ == null) {
        postProcessingAction_ = null;
        onChanged();
      } else {
        postProcessingAction_ = null;
        postProcessingActionBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Message used to instruct the assistant engine to process audio data.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantPostProcessingActionRequest postProcessingAction = 10;</code>
     */
    public ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest.Builder getPostProcessingActionBuilder() {
      
      onChanged();
      return getPostProcessingActionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Message used to instruct the assistant engine to process audio data.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantPostProcessingActionRequest postProcessingAction = 10;</code>
     */
    public ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequestOrBuilder getPostProcessingActionOrBuilder() {
      if (postProcessingActionBuilder_ != null) {
        return postProcessingActionBuilder_.getMessageOrBuilder();
      } else {
        return postProcessingAction_ == null ?
            ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest.getDefaultInstance() : postProcessingAction_;
      }
    }
    /**
     * <pre>
     * Message used to instruct the assistant engine to process audio data.
     * </pre>
     *
     * <code>.sensory.api.v1.assistant.AssistantPostProcessingActionRequest postProcessingAction = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest, ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest.Builder, ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequestOrBuilder> 
        getPostProcessingActionFieldBuilder() {
      if (postProcessingActionBuilder_ == null) {
        postProcessingActionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest, ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequest.Builder, ai.sensorycloud.api.v1.assistant.AssistantPostProcessingActionRequestOrBuilder>(
                getPostProcessingAction(),
                getParentForChildren(),
                isClean());
        postProcessingAction_ = null;
      }
      return postProcessingActionBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:sensory.api.v1.assistant.AssistantMessageRequest)
  }

  // @@protoc_insertion_point(class_scope:sensory.api.v1.assistant.AssistantMessageRequest)
  private static final ai.sensorycloud.api.v1.assistant.AssistantMessageRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ai.sensorycloud.api.v1.assistant.AssistantMessageRequest();
  }

  public static ai.sensorycloud.api.v1.assistant.AssistantMessageRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AssistantMessageRequest>
      PARSER = new com.google.protobuf.AbstractParser<AssistantMessageRequest>() {
    @java.lang.Override
    public AssistantMessageRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AssistantMessageRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AssistantMessageRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AssistantMessageRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ai.sensorycloud.api.v1.assistant.AssistantMessageRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

